{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/molecules/EnvSearchResult.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil'; // import AddressState from 'recoilStates/AddressState';\n// import axios from 'axios';\n// import kakaoAuthKey from 'global/KakaoAuthKey';\n\nimport AroundEnvListState from 'recoilStates/AroundEnvListState';\nlet id = 0;\n\nfunction getId() {\n  return id++;\n}\n\nconst SearchResults = ({\n  data\n}) => {\n  _s();\n\n  const setEnvList = useSetRecoilState(AroundEnvListState);\n\n  const onClick = () => {\n    setEnvList(oldList => [...oldList, {\n      id: getId(),\n      address_name: data.address_name,\n      latitude: data.y,\n      longitude: data.x,\n      category_group_name: data.category_group_name\n    }]); //백엔드에서 보통 api key들을 함, || 서버에서 데이터 렌더링 후 주던가\n\n    document.getElementById(\"search-results\").style.display = 'none';\n    document.getElementById(\"road-head\").style.display = 'block';\n    document.getElementById(\"road-address\").style.display = 'block';\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    style: {\n      width: \"350px\",\n      textAlign: \"start\",\n      textIndent: \"15px\",\n      backgroundColor: 'white',\n      // borderBottomWidth:'0px',\n      marginTop: '-2px',\n      borderRadius: '3px',\n      borderColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, data.place_name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, data.category_group_name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, data.address_name), console.log(data));\n};\n\n_s(SearchResults, \"iw79CaviLdi/Ra6L8E5k7SXNFtE=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/molecules/EnvSearchResult.js"],"names":["React","useRecoilState","useSetRecoilState","AroundEnvListState","id","getId","SearchResults","data","setEnvList","onClick","oldList","address_name","latitude","y","longitude","x","category_group_name","document","getElementById","style","display","width","textAlign","textIndent","backgroundColor","marginTop","borderRadius","borderColor","place_name","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD,C,CACA;AACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AAEA,IAAIC,EAAE,GAAG,CAAT;;AAEA,SAASC,KAAT,GAAiB;AACd,SAAOD,EAAE,EAAT;AACF;;AAGD,MAAME,aAAa,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAc;AAAA;;AAChC,QAAMC,UAAU,GAAGN,iBAAiB,CAACC,kBAAD,CAApC;;AAEA,QAAMM,OAAO,GAAG,MAAM;AAClBD,IAAAA,UAAU,CAAEE,OAAD,IAAa,CACpB,GAAGA,OADiB,EAEpB;AACIN,MAAAA,EAAE,EAAEC,KAAK,EADb;AAEIM,MAAAA,YAAY,EAAEJ,IAAI,CAACI,YAFvB;AAGIC,MAAAA,QAAQ,EAAEL,IAAI,CAACM,CAHnB;AAIIC,MAAAA,SAAS,EAAEP,IAAI,CAACQ,CAJpB;AAKIC,MAAAA,mBAAmB,EAAET,IAAI,CAACS;AAL9B,KAFoB,CAAd,CAAV,CADkB,CAYlB;;AAEAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAA0D,MAA1D;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,GAAqD,OAArD;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,CAA8CC,OAA9C,GAAwD,OAAxD;AACH,GAjBD;;AAmBA,sBACI;AAAQ,IAAA,OAAO,EAAEX,OAAjB;AAA0B,IAAA,KAAK,EAAE;AAC7BY,MAAAA,KAAK,EAAC,OADuB;AAE7BC,MAAAA,SAAS,EAAC,OAFmB;AAG7BC,MAAAA,UAAU,EAAC,MAHkB;AAI7BC,MAAAA,eAAe,EAAC,OAJa;AAK7B;AACAC,MAAAA,SAAS,EAAC,MANmB;AAO7BC,MAAAA,YAAY,EAAC,KAPgB;AAQ7BC,MAAAA,WAAW,EAAC;AARiB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpB,IAAI,CAACqB,UAAV,CAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKrB,IAAI,CAACS,mBAAV,CAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAI,CAACI,YAAV,CAZJ,EAaKkB,OAAO,CAACC,GAAR,CAAYvB,IAAZ,CAbL,CADJ;AAkBH,CAxCD;;GAAMD,a;UACiBJ,iB;;;KADjBI,a;AA0CN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\n// import AddressState from 'recoilStates/AddressState';\n// import axios from 'axios';\n// import kakaoAuthKey from 'global/KakaoAuthKey';\nimport AroundEnvListState from 'recoilStates/AroundEnvListState';\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\n\nconst SearchResults = ( {data} ) => {\n    const setEnvList = useSetRecoilState(AroundEnvListState);\n\n    const onClick = () => {\n        setEnvList((oldList) => [\n            ...oldList,\n            {\n                id: getId(),\n                address_name: data.address_name,\n                latitude: data.y,\n                longitude: data.x,\n                category_group_name: data.category_group_name\n            },]\n        );\n        \n        //백엔드에서 보통 api key들을 함, || 서버에서 데이터 렌더링 후 주던가\n\n        document.getElementById(\"search-results\").style.display = 'none';\n        document.getElementById(\"road-head\").style.display = 'block';\n        document.getElementById(\"road-address\").style.display = 'block';\n    };\n\n    return (\n        <button onClick={onClick} style={{\n            width:\"350px\",\n            textAlign:\"start\",\n            textIndent:\"15px\",\n            backgroundColor:'white',\n            // borderBottomWidth:'0px',\n            marginTop:'-2px',\n            borderRadius:'3px',\n            borderColor:'black'\n        }}>\n            <h3>{data.place_name}</h3>\n            <h5>{data.category_group_name}</h5>\n            <h5>{data.address_name}</h5>\n            {console.log(data)}\n        </button>\n\n    )\n};\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}