{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/global/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport firebase from './fbase';\nimport { useSetRecoilState } from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const setData = useSetRecoilState(RoadNameState);\n\n  const getWalkRoadInfo = async () => {\n    try {\n      const a = [];\n      const res = await firebase.firestore().collection('WalkRoad').get();\n      res.forEach(doc => {\n        a.push(doc.data().roadName);\n      });\n      setData(a); // console.log(arr); // 여러번 들어가면 위험\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWalkRoadInfo();\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, init ? /*#__PURE__*/React.createElement(AppRouter, {\n    isLoggedIn: isLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }) : \"Initializing...\", /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"\\xA9 \", new Date().getFullYear(), \" Luminouss\"));\n}\n\n_s(App, \"YMvj17MSmCmvlS9azC98hrvEQak=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/global/App.js"],"names":["React","useEffect","useState","AppRouter","firebase","useSetRecoilState","RoadNameState","App","init","setInit","isLoggedIn","setLoggedIn","setData","getWalkRoadInfo","a","res","firestore","collection","get","forEach","doc","push","data","roadName","error","console","log","auth","onAuthStateChanged","user","Date","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMU,OAAO,GAAGP,iBAAiB,CAACC,aAAD,CAAjC;;AAEA,QAAMO,eAAe,GAAG,YAAY;AAClC,QAAI;AACA,YAAMC,CAAC,GAAG,EAAV;AACA,YAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,EAAlB;AAEAH,MAAAA,GAAG,CAACI,OAAJ,CAAaC,GAAD,IAAS;AACjBN,QAAAA,CAAC,CAACO,IAAF,CAAOD,GAAG,CAACE,IAAJ,GAAWC,QAAlB;AACH,OAFD;AAGAX,MAAAA,OAAO,CAACE,CAAD,CAAP,CAPA,CAQI;AACP,KATD,CAWA,OAAMU,KAAN,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAfC;;AAgBAvB,EAAAA,SAAS,CAAE,MAAM;AACfY,IAAAA,eAAe;AACfT,IAAAA,QAAQ,CAACuB,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,UAAIA,IAAJ,EAAU;AACRlB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACDF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAPD;AAQD,GAVQ,EAUL,EAVK,CAAT;AAYA,sBAAQ,0CACHD,IAAI,gBAAG,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2C,iBAD5C,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgB,IAAIoB,IAAJ,GAAWC,WAAX,EAAhB,eAFI,CAAR;AAMD;;GAvCQxB,G;UAGSF,iB;;;KAHTE,G;AAuCR;AAED,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport firebase from './fbase';\nimport { useSetRecoilState } from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const setData = useSetRecoilState(RoadNameState);\n\n  const getWalkRoadInfo = async () => {\n    try {\n        const a = [];\n        const res = await firebase.firestore().collection('WalkRoad').get()\n\n        res.forEach((doc) => {\n            a.push(doc.data().roadName);\n        });\n        setData(a);\n            // console.log(arr); // 여러번 들어가면 위험\n    }\n    \n    catch(error){\n        console.log(error);\n    }\n};\n  useEffect((() => {\n    getWalkRoadInfo();\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }), []);\n\n  return (<>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Luminouss</footer>\n    </>\n\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}