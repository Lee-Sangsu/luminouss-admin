{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-admin/src/components/pages/AddRoad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRecoilValue } from 'recoil';\nimport TodoItemCreator from 'functions/TodoItemCreator';\nimport TodoItem from 'recoilStates/TodoItem';\nimport todoListState from 'components/atom/todoListState';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst AddRoad = () => {\n  _s();\n\n  const todoList = useRecoilValue(todoListState);\n  const [state, setState] = useState('');\n  const [address, setAddress] = useState(\"\");\n  const options = [\"종로구\", \"중구\", \"용산구\", \"성동구\", \"광진구\", \"동대문구\", \"중랑구\", \"성북구\", \"강북구\", \"도봉구\", \"노원구\", \"은평구\", \"서대문구\", \"마포구\", \"양천구\", \"강서구\", \"구로구\", \"금천구\", \"영등포구\", \"동작구\", \"관악구\", \"서초구\", \"강남구\", \"송파구\", \"강동구\"];\n\n  const onSelect = event => {\n    setState(event.value);\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"세부 주소\") {\n      setAddress(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"AddRoad Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: options,\n      onChange: onSelect,\n      value: state,\n      placeholder: \"Select an option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"\\uC138\\uBD80 \\uC8FC\\uC18C\",\n      value: address,\n      onChange: onChange,\n      placeholder: \"\\uC138\\uBD80 \\uC8FC\\uC18C\\uB97C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC6A9\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TodoItemCreator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), todoList.map(todoItem => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: todoItem\n    }, todoItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_s(AddRoad, \"zs9HuHsZ6QcBd6G75CIOoWssMgs=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = AddRoad;\nexport default AddRoad;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoad\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/components/pages/AddRoad.js"],"names":["React","useState","useRecoilValue","TodoItemCreator","TodoItem","todoListState","Dropdown","AddRoad","todoList","state","setState","address","setAddress","options","onSelect","event","value","onChange","target","name","map","todoItem","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,cADJ,QAES,QAFT;AAGA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,0BAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGN,cAAc,CAACG,aAAD,CAA/B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMY,OAAO,GAAG,CACd,KADc,EACP,IADO,EACD,KADC,EACM,KADN,EACa,KADb,EACoB,MADpB,EAC4B,KAD5B,EACmC,KADnC,EAC0C,KAD1C,EACiD,KADjD,EACwD,KADxD,EAC+D,KAD/D,EACsE,MADtE,EAC8E,KAD9E,EACqF,KADrF,EAC4F,KAD5F,EACmG,KADnG,EAC0G,KAD1G,EACiH,MADjH,EACyH,KADzH,EACgI,KADhI,EACuI,KADvI,EAC8I,KAD9I,EACqJ,KADrJ,EAC4J,KAD5J,CAAhB;;AAIA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BL,IAAAA,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAR;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIF,KAAD,IAAW;AAC1B,UAAM;AACFG,MAAAA,MAAM,EAAE;AACJC,QAAAA,IADI;AACEH,QAAAA;AADF;AADN,QAIFD,KAJJ;;AAKA,QAAII,IAAI,KAAK,OAAb,EAAsB;AACpBP,MAAAA,UAAU,CAACI,KAAD,CAAV;AACD;AACF,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH,OAAnB;AAA4B,MAAA,QAAQ,EAAEC,QAAtC;AAAgD,MAAA,KAAK,EAAEL,KAAvD;AAA8D,MAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAoB,MAAA,KAAK,EAAEE,OAA3B;AAAoC,MAAA,QAAQ,EAAEM,QAA9C;AAAwD,MAAA,WAAW,EAAC,sEAApE;AAAoF,MAAA,QAAQ;AAA5F;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMKT,QAAQ,CAACY,GAAT,CAAcC,QAAD,iBACZ,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADD,CANL;AAAA,kBADF;AAYH,CApCD;;GAAMf,O;UACeL,c;;;KADfK,O;AAsCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    useRecoilValue,\n  } from 'recoil';\nimport TodoItemCreator from 'functions/TodoItemCreator';\nimport TodoItem from 'recoilStates/TodoItem';\nimport todoListState from 'components/atom/todoListState';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst AddRoad = () => {\n    const todoList = useRecoilValue(todoListState);\n    const [state, setState] = useState('');\n    const [address, setAddress] = useState(\"\");\n\n    const options = [\n      \"종로구\", \"중구\", \"용산구\", \"성동구\", \"광진구\", \"동대문구\", \"중랑구\", \"성북구\", \"강북구\", \"도봉구\", \"노원구\", \"은평구\", \"서대문구\", \"마포구\", \"양천구\", \"강서구\", \"구로구\", \"금천구\", \"영등포구\", \"동작구\", \"관악구\", \"서초구\", \"강남구\", \"송파구\", \"강동구\"\n  ];\n\n    const onSelect = (event) => {\n      setState(event.value);\n    };\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"세부 주소\") {\n        setAddress(value);\n      }\n    };\n\n    return (\n      <>\n        <h3>AddRoad Page</h3>\n          <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n          <input name=\"세부 주소\" value={address} onChange={onChange} placeholder=\"세부 주소를 작성해주세용\" required/>\n          <TodoItemCreator />\n  \n          {todoList.map((todoItem) => (\n            <TodoItem key={todoItem.id} item={todoItem} />\n          ))}\n      </>\n    );\n};\n\nexport default AddRoad;"]},"metadata":{},"sourceType":"module"}