{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/molecules/ForAddRoad/1Roadname/RoadNameInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\nimport axios from 'axios';\nimport kakaoAuthKey from 'global/KakaoAuthKey';\nimport SearchedResultState from 'recoilStates/Addroad/searched/SearchedResultState';\n\nconst RoadNameInput = ({\n  placeholder\n}) => {\n  _s();\n\n  const setSearchState = useSetRecoilState(SearchedResultState);\n  const [input, setInput] = useRecoilState(RoadNameState);\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"just\") {\n      setInput(value); // SearchKeyword(value);\n    }\n  };\n\n  const onClick = async () => {\n    if (input) {\n      axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n        headers: {\n          'Authorization': `KakaoAK ${kakaoAuthKey}`,\n          'content-type': 'application/x-www-form-urlencoded'\n        },\n        params: {\n          query: `${input}`\n        }\n      }).then(results => {\n        const itemList = JSON.parse(JSON.stringify(results.data));\n        setSearchState(itemList.documents);\n      }).catch(error => console.log(error));\n      document.getElementById(\"search-results\").style.display = 'inline-block';\n      document.getElementById(\"road-head\").style.display = 'none';\n      document.getElementById(\"road-address\").style.display = 'none';\n    } else {\n      window.alert('검색어를 입력해주세요.');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"340px\",\n      height: \"35px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"just\",\n    onChange: onChange,\n    value: input,\n    placeholder: placeholder,\n    style: {\n      display: \"flex\",\n      width: '340px',\n      height: \"35px\",\n      position: \"absolute\",\n      textIndent: '10px'\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      display: 'block',\n      zIndex: \"1\",\n      position: \"absolute\",\n      width: \"80px\",\n      marginLeft: \"270px\",\n      height: \"41px\",\n      padding: '0'\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \" Search \"));\n};\n\n_s(RoadNameInput, \"Q5JtR3DT+iX3+atw8JBr5htkNWc=\", false, function () {\n  return [useSetRecoilState, useRecoilState];\n});\n\n_c = RoadNameInput;\nexport default RoadNameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoadNameInput\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/molecules/ForAddRoad/1Roadname/RoadNameInput.js"],"names":["React","useSetRecoilState","useRecoilState","RoadNameState","axios","kakaoAuthKey","SearchedResultState","RoadNameInput","placeholder","setSearchState","input","setInput","onChange","event","target","name","value","onClick","get","headers","params","query","then","results","itemList","JSON","parse","stringify","data","documents","catch","error","console","log","document","getElementById","style","display","window","alert","width","height","position","textIndent","zIndex","marginLeft","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useSetRecoilState, useRecoilState} from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\nimport axios from 'axios';\nimport kakaoAuthKey from 'global/KakaoAuthKey';\nimport SearchedResultState from 'recoilStates/Addroad/searched/SearchedResultState'\n\n\nconst RoadNameInput = ( {placeholder} ) => {\n    const setSearchState = useSetRecoilState(SearchedResultState);\n    const [input, setInput] = useRecoilState(RoadNameState);\n\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"just\") {\n        setInput(value);\n        // SearchKeyword(value);\n      }\n  }; \n\n  const onClick = async ()  => {\n    if (input) {\n      axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n        headers: {\n            'Authorization': `KakaoAK ${kakaoAuthKey}`,\n            'content-type': 'application/x-www-form-urlencoded'\n        },\n        params: { query: `${input}`}\n    \n      }).then( (results) => {\n        const itemList = JSON.parse(JSON.stringify(results.data));\n        setSearchState(itemList.documents);\n\n      }).catch(error => console.log(error))\n      document.getElementById(\"search-results\").style.display = 'inline-block';\n      document.getElementById(\"road-head\").style.display = 'none';\n      document.getElementById(\"road-address\").style.display = 'none';\n    } else {\n      window.alert('검색어를 입력해주세요.');\n    }\n    \n  };\n\n  return (\n    <div style={{\n      display:\"flex\",\n      width:\"340px\",\n      height:\"35px\"\n    }}>\n      <input name=\"just\" onChange={onChange} value={input} placeholder={placeholder} style={{\n        display:\"flex\",\n        width:'340px',\n        height:\"35px\",\n        position:\"absolute\",\n        textIndent:'10px'\n      }} required/>\n      <button style={{\n        display:'block',\n        zIndex:\"1\",\n        position:\"absolute\",\n        width:\"80px\",\n        marginLeft:\"270px\",\n        height:\"41px\",\n        padding:'0'\n      }} onClick={onClick}> Search </button>\n    </div>\n  );\n};\n\nexport default RoadNameInput;"]},"metadata":{},"sourceType":"module"}