{"ast":null,"code":"import axios from'axios';import kakaoAuthKey from'global/authKey';import{useSetRecoilState}from'recoil';import SearchedResultState from'recoilStates/SearchedResultState';export var SearchKeyword=function SearchKeyword(keyword){var setSearchState=useSetRecoilState(SearchedResultState);axios.get('https://dapi.kakao.com/v2/local/search/keyword.json',{headers:{'Authorization':\"KakaoAK \".concat(kakaoAuthKey),'content-type':'application/x-www-form-urlencoded'},params:{query:\"\".concat(keyword)}}).then(function(res){return setSearchState(res.data.documents);}).catch(function(e){setSearchState(e);// occurs Invalid hook call error\n});};","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/functions/SearchKeyword.js"],"names":["axios","kakaoAuthKey","useSetRecoilState","SearchedResultState","SearchKeyword","keyword","setSearchState","get","headers","params","query","then","res","data","documents","catch","e"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,iBAAT,KAAkC,QAAlC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,kCAAhC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CACtC,GAAMC,CAAAA,cAAc,CAAGJ,iBAAiB,CAACC,mBAAD,CAAxC,CACAH,KAAK,CAACO,GAAN,CAAU,qDAAV,CAAiE,CAC7DC,OAAO,CAAE,CACL,kCAA4BP,YAA5B,CADK,CAEL,eAAgB,mCAFX,CADoD,CAK7DQ,MAAM,CAAE,CAAEC,KAAK,WAAKL,OAAL,CAAP,CALqD,CAAjE,EAOEM,IAPF,CAOO,SAACC,GAAD,QAASN,CAAAA,cAAc,CAACM,GAAG,CAACC,IAAJ,CAASC,SAAV,CAAvB,EAPP,EAOoDC,KAPpD,CAO0D,SAACC,CAAD,CAAO,CAC7DV,cAAc,CAACU,CAAD,CAAd,CAAmB;AACtB,CATD,EAUH,CAZM","sourcesContent":["import axios from 'axios';\nimport kakaoAuthKey from 'global/authKey';\nimport { useSetRecoilState } from 'recoil';\nimport SearchedResultState from 'recoilStates/SearchedResultState';\n\nexport const SearchKeyword = (keyword) => {\n    const setSearchState = useSetRecoilState(SearchedResultState);\n    axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n        headers: {\n            'Authorization': `KakaoAK ${kakaoAuthKey}`,\n            'content-type': 'application/x-www-form-urlencoded'\n        },\n        params: { query: `${keyword}`}\n    }\n    ).then((res) => setSearchState(res.data.documents)).catch((e) => {\n        setSearchState(e); // occurs Invalid hook call error\n    })\n};\n\n"]},"metadata":{},"sourceType":"module"}