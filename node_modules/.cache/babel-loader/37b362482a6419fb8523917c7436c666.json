{"ast":null,"code":"import _regeneratorRuntime from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import AddRoadForm from'components/organisms/AddRoadForm';import useConfirm from'hooks/useConfirm';// import { useRecoilValue } from 'recoil';\nimport SetEntireStates from'functions/SetEntireStates';import firebase from'global/fbase';import{useHistory}from'react-router-dom';var AddRoad=function AddRoad(){var history=useHistory();var a=SetEntireStates();var submitConfirm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return firebase.firestore().collection(\"WalkRoad\").doc(a.roadName).set(a).then(function(){window.alert(\"Document successfully written!\");;history.push('/');}).catch(function(documentError){window.alert(documentError);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function submitConfirm(){return _ref.apply(this,arguments);};}();var abort=function abort(){return console.log('abort');};var confirmSubmit=useConfirm(\"You sure?\",submitConfirm,abort);return/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexDirection:'column',width:'100%',height:'100%',justifyContent:'center',alignItems:'center'}},/*#__PURE__*/React.createElement(\"h2\",null,\"AddRoad Page\"),/*#__PURE__*/React.createElement(AddRoadForm,null),/*#__PURE__*/React.createElement(\"button\",{onClick:confirmSubmit,style:{width:'200px',height:'40px',borderWidth:'3px',marginTop:'15px',fontSize:'15px',fontWeight:'500'}},\" \\uC815\\uBCF4 \\uB4F1\\uB85D\\uD558\\uAE30 \"));};export default AddRoad;","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/AddRoad.js"],"names":["React","AddRoadForm","useConfirm","SetEntireStates","firebase","useHistory","AddRoad","history","a","submitConfirm","firestore","collection","doc","roadName","set","then","window","alert","push","catch","documentError","abort","console","log","confirmSubmit","display","flexDirection","width","height","justifyContent","alignItems","borderWidth","marginTop","fontSize","fontWeight"],"mappings":"mXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kCAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA;AACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,OAAO,CAAGF,UAAU,EAA1B,CACA,GAAMG,CAAAA,CAAC,CAAGL,eAAe,EAAzB,CACA,GAAMM,CAAAA,aAAa,0FAAG,yJAEdL,CAAAA,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgDJ,CAAC,CAACK,QAAlD,EAA4DC,GAA5D,CAAgEN,CAAhE,EACLO,IADK,CACA,UAAM,CACRC,MAAM,CAACC,KAAP,CAAa,gCAAb,EAA+C,CAC/CV,OAAO,CAACW,IAAR,CAAa,GAAb,EACH,CAJK,EAKLC,KALK,CAKC,SAASC,aAAT,CAAwB,CAC7BJ,MAAM,CAACC,KAAP,CAAaG,aAAb,EACD,CAPK,CAFc,uDAAH,kBAAbX,CAAAA,aAAa,0CAAnB,CAWA,GAAMY,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,SAAMC,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN,EAAd,CACA,GAAMC,CAAAA,aAAa,CAAGtB,UAAU,CAAC,WAAD,CAAcO,aAAd,CAA6BY,KAA7B,CAAhC,CAGA,mBACE,2BAAK,KAAK,CAAE,CACVI,OAAO,CAAE,MADC,CAEVC,aAAa,CAAE,QAFL,CAGVC,KAAK,CAAE,MAHG,CAIVC,MAAM,CAAE,MAJE,CAKVC,cAAc,CAAC,QALL,CAMVC,UAAU,CAAE,QANF,CAAZ,eAQE,6CARF,cASE,oBAAC,WAAD,MATF,cAUE,8BAAQ,OAAO,CAAEN,aAAjB,CAAgC,KAAK,CAAE,CACrCG,KAAK,CAAC,OAD+B,CAErCC,MAAM,CAAC,MAF8B,CAGrCG,WAAW,CAAC,KAHyB,CAIrCC,SAAS,CAAC,MAJ2B,CAKrCC,QAAQ,CAAE,MAL2B,CAMrCC,UAAU,CAAE,KANyB,CAAvC,4CAVF,CADF,CAqBD,CAvCD,CAyCA,cAAe5B,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport AddRoadForm from 'components/organisms/AddRoadForm';\nimport useConfirm from 'hooks/useConfirm';\n// import { useRecoilValue } from 'recoil';\nimport SetEntireStates from 'functions/SetEntireStates';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\n\nconst AddRoad = () => {\n  const history = useHistory();\n  const a = SetEntireStates();\n  const submitConfirm = async () => {\n    // recoil value 다 가져와서 firestore에 한번에 저장, -> try catch\n    await firebase.firestore().collection(\"WalkRoad\").doc(a.roadName).set(a)\n    .then(() => {\n        window.alert(\"Document successfully written!\");;               \n        history.push('/');\n    })\n    .catch(function(documentError) {\n      window.alert(documentError);\n    });\n  };\n  const abort = () => console.log('abort'); \n  const confirmSubmit = useConfirm(\"You sure?\", submitConfirm, abort);\n\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      height: '100%',\n      justifyContent:'center',\n      alignItems: 'center'\n    }}>\n      <h2>AddRoad Page</h2>\n      <AddRoadForm />\n      <button onClick={confirmSubmit} style={{\n        width:'200px',\n        height:'40px',\n        borderWidth:'3px',\n        marginTop:'15px',\n        fontSize: '15px',\n        fontWeight: '500'\n      }}> 정보 등록하기 </button>\n    </div>\n  );\n};\n\nexport default AddRoad;"]},"metadata":{},"sourceType":"module"}