{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-admin/src/components/molecules/RoadNameInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\nimport SearchKeyword from 'functions/SearchKeyword'; // import axios from 'axios';\n// import kakaoAuthKey from 'global/authKey';\n\nimport SearchedResultState from 'recoilStates/SearchedResultState';\n\nconst RoadNameInput = ({\n  placeholder\n}) => {\n  _s();\n\n  const setRoadName = useSetRecoilState(RoadNameState);\n  const roadName = useRecoilValue(RoadNameState);\n  const searchedRes = useRecoilValue(SearchedResultState);\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"just\") {\n      setRoadName(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"just\",\n      onChange: onChange,\n      value: roadName,\n      placeholder: placeholder,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SearchKeyword(roadName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RoadNameInput, \"AB0Jxb1pLpSzglPfBcZBS/6pHzI=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useRecoilValue];\n});\n\n_c = RoadNameInput;\nexport default RoadNameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoadNameInput\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/components/molecules/RoadNameInput.js"],"names":["React","useSetRecoilState","useRecoilValue","RoadNameState","SearchKeyword","SearchedResultState","RoadNameInput","placeholder","setRoadName","roadName","searchedRes","onChange","event","target","name","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,QAAgD,QAAhD;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,yBAA1B,C,CACA;AACA;;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAGA,MAAMC,aAAa,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAqB;AAAA;;AACvC,QAAMC,WAAW,GAAGP,iBAAiB,CAACE,aAAD,CAArC;AACA,QAAMM,QAAQ,GAAGP,cAAc,CAACC,aAAD,CAA/B;AAEA,QAAMO,WAAW,GAAGR,cAAc,CAACG,mBAAD,CAAlC;;AAEA,QAAMM,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAM;AACFC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IADI;AACEC,QAAAA;AADF;AADN,QAIFH,KAJJ;;AAKA,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACnBN,MAAAA,WAAW,CAACO,KAAD,CAAX;AACD;AACJ,GATC;;AAWF,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEJ,QAA7B;AAAuC,MAAA,KAAK,EAAEF,QAA9C;AAAwD,MAAA,WAAW,EAAEF,WAArE;AAAkF,MAAA,QAAQ;AAA1F;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,aAAa,CAACK,QAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CAzBD;;GAAMH,a;UACkBL,iB,EACHC,c,EAEGA,c;;;KAJlBI,a;AA2BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\nimport SearchKeyword from 'functions/SearchKeyword';\n// import axios from 'axios';\n// import kakaoAuthKey from 'global/authKey';\nimport SearchedResultState from 'recoilStates/SearchedResultState'\n\n\nconst RoadNameInput = ( {placeholder} ) => {\n    const setRoadName = useSetRecoilState(RoadNameState);\n    const roadName = useRecoilValue(RoadNameState);\n\n    const searchedRes = useRecoilValue(SearchedResultState);\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"just\") {\n        setRoadName(value);\n      }\n  }; \n\n  return (\n    <>\n      <input name=\"just\" onChange={onChange} value={roadName} placeholder={placeholder} required/>\n      <button onClick={SearchKeyword(roadName)}>\n        {/* {searchedRes.map((data) => <> <h5> {data.data} </h5> </>)} */}\n      </button>\n    </>\n  );\n};\n\nexport default RoadNameInput;"]},"metadata":{},"sourceType":"module"}