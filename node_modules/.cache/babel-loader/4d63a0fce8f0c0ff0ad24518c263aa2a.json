{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/pages/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport firebase from \"global/fbase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Kakao from 'kakaojs';\nimport { useSetRecoilState } from 'recoil';\nimport IsLoggedInState from 'recoilStates/IsLoginState';\n\nconst SignIn = () => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const setInit = useSetRecoilState(IsLoggedInState);\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      // let data;\n      await firebase.auth().signInWithEmailAndPassword(email, password); //어케 홈 화면으로 다시 돌려보내지\n\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const loginWithKaKao = () => {\n    Kakao.Auth.login({\n      scope: 'profile',\n      success: res => {\n        Kakao.API.request({\n          url: '/v2/user/me',\n          success: function (res) {\n            console.log(JSON.stringify(res));\n            setInit(true);\n          },\n          fail: function (error) {\n            alert('login success, but failed to request user information: ' + JSON.stringify(error));\n          }\n        });\n      },\n      fail: err => {\n        console.error(err);\n      }\n    });\n  }; // 동의 항목 추가하고 코드 짜면 끝\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\\uD558\\uACE0 \\uC0C8\\uB85C\\uC6B4 \\uC0B0\\uCC45\\uB85C\\uB97C \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"\\uB85C\\uADF8\\uC778\",\n    style: {\n      marginTop: '20px',\n      width: '200px',\n      height: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), error), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: loginWithKaKao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \" kakao check\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"\\uC544\\uC9C1 \\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\"), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 32\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"));\n};\n\n_s(SignIn, \"LeGqdIeveY7v164+W+T2y3moPME=\", false, function () {\n  return [useHistory, useSetRecoilState];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/SignIn.js"],"names":["React","useState","firebase","useHistory","Link","Kakao","useSetRecoilState","IsLoggedInState","SignIn","history","email","setEmail","password","setPassword","error","setError","setInit","onChange","event","target","name","value","onSubmit","preventDefault","auth","signInWithEmailAndPassword","push","message","console","log","loginWithKaKao","Auth","login","scope","success","res","API","request","url","JSON","stringify","fail","alert","err","display","justifyContent","alignItems","flexDirection","marginTop","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"global/fbase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Kakao from 'kakaojs';\nimport {useSetRecoilState} from 'recoil';\nimport IsLoggedInState from 'recoilStates/IsLoginState';\n\nconst SignIn = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const setInit = useSetRecoilState(IsLoggedInState);\n\n    const onChange = (event) => { \n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            // let data;\n            await firebase.auth().signInWithEmailAndPassword(email, password);\n            //어케 홈 화면으로 다시 돌려보내지\n            history.push(\"/\");\n        } catch (error) {\n            setError(error.message);\n            console.log(error.message);\n        }\n    };\n    const loginWithKaKao = () => {\n        Kakao.Auth.login({\n            scope: 'profile',\n            success: (res) => {\n                Kakao.API.request({\n                    url: '/v2/user/me',\n                    success: function(res) {\n                     console.log(JSON.stringify(res))\n                     setInit(true);\n                    },\n                    fail: function(error) {\n                        alert(\n                            'login success, but failed to request user information: ' +\n                            JSON.stringify(error)\n                        )\n                    },\n                })\n            }, \n            fail: (err) => {\n                console.error(err);\n            }\n        });\n    }; // 동의 항목 추가하고 코드 짜면 끝\n    \n\n\n\n    return (\n    <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems:'center',\n        flexDirection: 'column'\n    }}>\n        <h2>로그인하고 새로운 산책로를 추가해보세요</h2>\n        <form onSubmit={onSubmit} style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems:'center',\n            flexDirection: 'column'\n        }}>\n            <h4>이메일</h4>\n            <input name=\"email\" type=\"email\" value={email} onChange={onChange} required></input>\n            <h4>비밀번호</h4>\n            <input name=\"password\" type=\"password\" value={password} onChange={onChange} required></input>\n            <input type=\"submit\" value=\"로그인\" style={{\n                marginTop: '20px',\n                width: '200px',\n                height: '30px'\n            }}></input>\n            {error}\n        </form>\n        <button onClick={loginWithKaKao}> kakao check</button>\n        <h3>아직 계정이 없으신가요?</h3> <Link to=\"/sign-up\">회원가입하기</Link>\n    </div>\n    );\n};\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}