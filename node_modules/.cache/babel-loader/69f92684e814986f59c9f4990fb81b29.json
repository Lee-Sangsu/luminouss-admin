{"ast":null,"code":"import _regeneratorRuntime from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Link,useHistory}from\"react-router-dom\";import\"components/styles/Home.css\";import firebase from\"global/fbase\";var Home=function Home(_ref){var isLoggedIn=_ref.isLoggedIn;//prop 바뀌면 리렌더링 isLoggedIn state 바뀜\nvar history=useHistory();//login 안 된 경우, 로그인 필요합니다 알러트 띄우기\nvar onClick=function onClick(event){event.preventDefault();if(isLoggedIn){history.push('/add-road-info');}else{window.alert(\"Login required\");history.push('sign-in');}};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),arr=_useState2[0],setArr=_useState2[1];var getWalkRoadInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return firebase.firestore().collection('WalkRoad').get();case 2:res=_context.sent;res.forEach(function(doc){var arrObj=_objectSpread(_objectSpread({},doc.data()),{},{id:doc.id});setArr(function(prev){return[arrObj].concat(_toConsumableArray(prev));});});case 4:case\"end\":return _context.stop();}}},_callee);}));return function getWalkRoadInfo(){return _ref2.apply(this,arguments);};}();// 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \nuseEffect(function(){getWalkRoadInfo();},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mainContainer\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"mainTitle\"},\"\\uC2DC\\uAC01\\uC7A5\\uC560\\uC778\\uC758 \\uB208\\uACFC \\uBC1C\\uC774 \\uB418\\uC5B4\\uC8FC\\uC138\\uC694.\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"explanation\"},\"\\uBB38\\uC81C \\uC124\\uBA85...\"),/*#__PURE__*/React.createElement(\"div\",{className:\"linkBox\"},/*#__PURE__*/React.createElement(\"div\",{className:\"addWalkway_text\"},\"\\uC0B0\\uCC45\\uB85C \\uC815\\uBCF4 \\uCD94\\uAC00\\uD558\\uAE30\"),/*#__PURE__*/React.createElement(Link,{to:\"/add-road-info\",className:\"addWalkway\",onClick:onClick},\"+\")),arr?arr.map(function(data){return/*#__PURE__*/React.createElement(\"div\",{key:data.id,style:{marginTop:\"20px\",marginBottom:\"30px\"}},/*#__PURE__*/React.createElement(\"h4\",null,data.roadName));}):/*#__PURE__*/React.createElement(\"h5\",null,\"\\uC0B0\\uCC45\\uB85C \\uC815\\uBCF4 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911..\")));};export default Home;","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Home.js"],"names":["React","useEffect","useState","Link","useHistory","firebase","Home","isLoggedIn","history","onClick","event","preventDefault","push","window","alert","arr","setArr","getWalkRoadInfo","firestore","collection","get","res","forEach","doc","arrObj","data","id","prev","map","marginTop","marginBottom","roadName"],"mappings":"26BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,MAAO,4BAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CAEA,GAAMC,CAAAA,IAAI,CAAI,QAARA,CAAAA,IAAQ,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CAC9B;AAEA,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CACA;AACA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvBA,KAAK,CAACC,cAAN,GACA,GAAIJ,UAAJ,CAAe,CACXC,OAAO,CAACI,IAAR,CAAa,gBAAb,EACH,CAFD,IAEO,CACHC,MAAM,CAACC,KAAP,CAAa,gBAAb,EACAN,OAAO,CAACI,IAAR,CAAa,SAAb,EACH,CACJ,CARD,CAL8B,cAeTV,QAAQ,CAAC,EAAD,CAfC,wCAevBa,GAfuB,eAelBC,MAfkB,eAiB9B,GAAMC,CAAAA,eAAe,2FAAG,iKACEZ,CAAAA,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,EADF,QACVC,GADU,eAGhBA,GAAG,CAACC,OAAJ,CAAY,SAACC,GAAD,CAAS,CACjB,GAAMC,CAAAA,MAAM,gCACLD,GAAG,CAACE,IAAJ,EADK,MAERC,EAAE,CAAEH,GAAG,CAACG,EAFA,EAAZ,CAIAV,MAAM,CAAC,SAACW,IAAD,SAAWH,MAAX,4BAAsBG,IAAtB,IAAD,CAAN,CACH,CAND,EAHgB,sDAAH,kBAAfV,CAAAA,eAAe,2CAArB,CAYA;AACAhB,SAAS,CAAC,UAAM,CACZgB,eAAe,GAClB,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACI,qDACI,2BAAK,SAAS,CAAC,eAAf,eACI,0BAAI,SAAS,CAAC,WAAd,mGADJ,cAII,0BAAI,SAAS,CAAC,aAAd,iCAJJ,cAQI,2BAAK,SAAS,CAAC,SAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,6DADJ,cAEI,oBAAC,IAAD,EAAM,EAAE,CAAC,gBAAT,CAA0B,SAAS,CAAC,YAApC,CAAiD,OAAO,CAAER,OAA1D,MAFJ,CARJ,CAcKM,GAAG,CAAGA,GAAG,CAACa,GAAJ,CAAQ,SAACH,IAAD,qBAAU,2BAAK,GAAG,CAAEA,IAAI,CAACC,EAAf,CAAmB,KAAK,CAAE,CAC/CG,SAAS,CAAC,MADqC,CAE/CC,YAAY,CAAC,MAFkC,CAA1B,eAIrB,8BAAKL,IAAI,CAACM,QAAV,CAJqB,CAAV,EAAR,CAAH,cAKK,kGAnBb,CADJ,CADJ,CA0BH,CA5DD,CA8DA,cAAezB,CAAAA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\nimport firebase from \"global/fbase\";\r\n\r\nconst Home  = ({ isLoggedIn }) => {\r\n    //prop 바뀌면 리렌더링 isLoggedIn state 바뀜\r\n\r\n    const history = useHistory();\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        if (isLoggedIn){\r\n            history.push('/add-road-info');\r\n        } else {\r\n            window.alert(\"Login required\");\r\n            history.push('sign-in');\r\n        }\r\n    };\r\n    \r\n    const [arr, setArr]= useState([]);\r\n\r\n    const getWalkRoadInfo = async () => {\r\n            const res = await firebase.firestore().collection('WalkRoad').get()\r\n    \r\n            res.forEach((doc) => {\r\n                const arrObj = {\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                };\r\n                setArr((prev) => [arrObj, ...prev]);\r\n            });\r\n    };\r\n     \r\n    // 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \r\n    useEffect(() => {\r\n        getWalkRoadInfo();\r\n    }, [])\r\n \r\n    return (\r\n        <>\r\n            <div className=\"mainContainer\">\r\n                <h1 className=\"mainTitle\">\r\n                    시각장애인의 눈과 발이 되어주세요.\r\n                </h1>\r\n                <h3 className=\"explanation\">\r\n                    문제 설명...\r\n                </h3>\r\n\r\n                <div className=\"linkBox\">\r\n                    <div className=\"addWalkway_text\">산책로 정보 추가하기</div>\r\n                    <Link to=\"/add-road-info\" className=\"addWalkway\" onClick={onClick}>\r\n                        +\r\n                    </Link>\r\n                </div>\r\n                {arr ? arr.map((data) => <div key={data.id} style={{\r\n                    marginTop:\"20px\",\r\n                    marginBottom:\"30px\"\r\n                }}>\r\n                    <h4>{data.roadName}</h4>\r\n                </div> ):<h5>산책로 정보 불러오는 중..</h5>}\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}