{"ast":null,"code":"import React from\"react\";import{Link,useHistory}from\"react-router-dom\";import\"components/styles/Home.css\";// import firebase from \"global/fbase\";\n// import FirestoreData from 'components/molecules/FirestoreData';\nvar Home=function Home(_ref){var isLoggedIn=_ref.isLoggedIn;var history=useHistory();//login 안 된 경우, 로그인 필요합니다 알러트 띄우기\nvar onClick=function onClick(event){event.preventDefault();if(isLoggedIn){history.push('/add-road-info');}else{window.alert(\"Login required\");history.push('sign-in');// return (<Route path=\"/sign-in\" component={SignIn} />);\n}};// const [arr, setArr]= useState([]);\n// 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \n// useEffect((  ) => {\n//     const a = [];\n//     firebase.firestore().collection('WalkRoad')\n//     .get()\n//     .then((res) => {\n//         res.forEach((doc) => {\n//             a.push(doc.data().roadName);\n//         });\n//         setArr(a);\n//     })\n//     .catch((error) => {\n//         console.log(error);\n//     })\n// }, [])\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mainContainer\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"mainTitle\"},\"\\uC2DC\\uAC01\\uC7A5\\uC560\\uC778\\uC758 \\uB208\\uACFC \\uBC1C\\uC774 \\uB418\\uC5B4\\uC8FC\\uC138\\uC694.\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"explanation\"},\"\\uBB38\\uC81C \\uC124\\uBA85...\"),/*#__PURE__*/React.createElement(\"div\",{className:\"linkBox\"},/*#__PURE__*/React.createElement(\"div\",{className:\"addWalkway_text\"},\"\\uC0B0\\uCC45\\uB85C \\uC815\\uBCF4 \\uCD94\\uAC00\\uD558\\uAE30\"),/*#__PURE__*/React.createElement(Link,{to:\"/add-road-info\",className:\"addWalkway\",onClick:onClick},\"+\"))));};export default Home;","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Home.js"],"names":["React","Link","useHistory","Home","isLoggedIn","history","onClick","event","preventDefault","push","window","alert"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,MAAO,4BAAP,CACA;AACA;AAGA,GAAMC,CAAAA,IAAI,CAAI,QAARA,CAAAA,IAAQ,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CAC9B,GAAMC,CAAAA,OAAO,CAAGH,UAAU,EAA1B,CACA;AACA,GAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvBA,KAAK,CAACC,cAAN,GACA,GAAIJ,UAAJ,CAAe,CACXC,OAAO,CAACI,IAAR,CAAa,gBAAb,EACH,CAFD,IAEO,CACHC,MAAM,CAACC,KAAP,CAAa,gBAAb,EACAN,OAAO,CAACI,IAAR,CAAa,SAAb,EACA;AACH,CACJ,CATD,CAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACI,qDACI,2BAAK,SAAS,CAAC,eAAf,eACI,0BAAI,SAAS,CAAC,WAAd,mGADJ,cAII,0BAAI,SAAS,CAAC,aAAd,iCAJJ,cAQI,2BAAK,SAAS,CAAC,SAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,6DADJ,cAEI,oBAAC,IAAD,EAAM,EAAE,CAAC,gBAAT,CAA0B,SAAS,CAAC,YAApC,CAAiD,OAAO,CAAEH,OAA1D,MAFJ,CARJ,CADJ,CADJ,CAsBH,CArDD,CAuDA,cAAeH,CAAAA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\n// import firebase from \"global/fbase\";\r\n// import FirestoreData from 'components/molecules/FirestoreData';\r\n\r\n\r\nconst Home  = ({ isLoggedIn }) => {\r\n    const history = useHistory();\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        if (isLoggedIn){\r\n            history.push('/add-road-info');\r\n        } else {\r\n            window.alert(\"Login required\");\r\n            history.push('sign-in');\r\n            // return (<Route path=\"/sign-in\" component={SignIn} />);\r\n        }\r\n    };\r\n    // const [arr, setArr]= useState([]);\r\n     \r\n    // 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \r\n    // useEffect((  ) => {\r\n    //     const a = [];\r\n    //     firebase.firestore().collection('WalkRoad')\r\n    //     .get()\r\n    //     .then((res) => {\r\n    //         res.forEach((doc) => {\r\n    //             a.push(doc.data().roadName);\r\n    //         });\r\n    //         setArr(a);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //         console.log(error);\r\n    //     })\r\n    // }, [])\r\n \r\n    return (\r\n        <>\r\n            <div className=\"mainContainer\">\r\n                <h1 className=\"mainTitle\">\r\n                    시각장애인의 눈과 발이 되어주세요.\r\n                </h1>\r\n                <h3 className=\"explanation\">\r\n                    문제 설명...\r\n                </h3>\r\n\r\n                <div className=\"linkBox\">\r\n                    <div className=\"addWalkway_text\">산책로 정보 추가하기</div>\r\n                    <Link to=\"/add-road-info\" className=\"addWalkway\" onClick={onClick}>\r\n                        +\r\n                    </Link>\r\n                </div>\r\n                {/* {arr.map((roadName, index) => <FirestoreData key={index} item={roadName} />)} */}\r\n                {/* {console.log(newArr)} */}\r\n                {/* {console.log(arr)} */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}