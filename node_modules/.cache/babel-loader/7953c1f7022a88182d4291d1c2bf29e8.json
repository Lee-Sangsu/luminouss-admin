{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"components/styles/Home.css\";\nimport firebase from \"global/fbase\";\n\nconst Home = ({\n  isLoggedIn\n}) => {\n  _s();\n\n  //prop 바뀌면 리렌더링 isLoggedIn state 바뀜\n  const history = useHistory(); //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\n\n  const onClick = event => {\n    event.preventDefault();\n\n    if (isLoggedIn) {\n      history.push('/add-road-info');\n    } else {\n      window.alert(\"산책로 정보를 추가하려면 로그인이 필요합니다.\");\n      history.push('sign-in');\n    }\n  };\n\n  const [arr, setArr] = useState([]);\n\n  const getWalkRoadInfo = async () => {\n    const res = await firebase.firestore().collection('WalkRoad').get();\n    res.forEach(doc => {\n      const arrObj = { ...doc.data(),\n        id: doc.id\n      };\n      setArr(prev => [arrObj, ...prev]);\n    });\n  }; // 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \n\n\n  useEffect(() => {\n    getWalkRoadInfo();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first-ontainer\",\n    style: {\n      height: window.screen.availHeight,\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uAC01\\uC7A5\\uC560\\uC778\\uC758 \\uB208\\uACFC \\uBC1C\\uC774 \\uB418\\uC5B4\\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, `\n산책로 정보를 입력하시면, \n여가활동이 어려운 시각장애인에게\n다양하고 편안한 산책 경험을 제공할 수 있습니다.`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linkBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addWalkway_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"\\uC0B0\\uCC45\\uB85C \\uC815\\uBCF4 \\uCD94\\uAC00\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/add-road-info\",\n    className: \"addWalkway\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"+\"))));\n};\n\n_s(Home, \"1iD/UmMu5WyOQuJ59yJhxaams28=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Home.js"],"names":["React","useEffect","useState","Link","useHistory","firebase","Home","isLoggedIn","history","onClick","event","preventDefault","push","window","alert","arr","setArr","getWalkRoadInfo","res","firestore","collection","get","forEach","doc","arrObj","data","id","prev","height","screen","availHeight","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,4BAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,IAAI,GAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC9B;AAEA,QAAMC,OAAO,GAAGJ,UAAU,EAA1B,CAH8B,CAI9B;;AACA,QAAMK,OAAO,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,UAAJ,EAAe;AACXC,MAAAA,OAAO,CAACI,IAAR,CAAa,gBAAb;AACH,KAFD,MAEO;AACHC,MAAAA,MAAM,CAACC,KAAP,CAAa,2BAAb;AACAN,MAAAA,OAAO,CAACI,IAAR,CAAa,SAAb;AACH;AACJ,GARD;;AAUA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAed,QAAQ,CAAC,EAAD,CAA7B;;AAEA,QAAMe,eAAe,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAG,MAAMb,QAAQ,CAACc,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,EAAlB;AAEAH,IAAAA,GAAG,CAACI,OAAJ,CAAaC,GAAD,IAAS;AACjB,YAAMC,MAAM,GAAG,EACX,GAAGD,GAAG,CAACE,IAAJ,EADQ;AAEXC,QAAAA,EAAE,EAAEH,GAAG,CAACG;AAFG,OAAf;AAIAV,MAAAA,MAAM,CAAEW,IAAD,IAAU,CAACH,MAAD,EAAS,GAAGG,IAAZ,CAAX,CAAN;AACH,KAND;AAOP,GAVD,CAjB8B,CA6B9B;;;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AACnCW,MAAAA,MAAM,EAAEf,MAAM,CAACgB,MAAP,CAAcC,WADa;AAEnCC,MAAAA,KAAK,EAAC;AAF6B,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AACtB;AACA;AACA,4BAJgB,CAPJ,eAcI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,gBAAT;AAA0B,IAAA,SAAS,EAAC,YAApC;AAAiD,IAAA,OAAO,EAAEtB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAdJ,CADJ,CADJ;AA2BH,CA9DD;;GAAMH,I;UAGcF,U;;;KAHdE,I;AAgEN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\nimport firebase from \"global/fbase\";\r\n\r\nconst Home  = ({ isLoggedIn }) => {\r\n    //prop 바뀌면 리렌더링 isLoggedIn state 바뀜\r\n\r\n    const history = useHistory();\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        if (isLoggedIn){\r\n            history.push('/add-road-info');\r\n        } else {\r\n            window.alert(\"산책로 정보를 추가하려면 로그인이 필요합니다.\");\r\n            history.push('sign-in');\r\n        }\r\n    };\r\n    \r\n    const [arr, setArr]= useState([]);\r\n\r\n    const getWalkRoadInfo = async () => {\r\n            const res = await firebase.firestore().collection('WalkRoad').get()\r\n    \r\n            res.forEach((doc) => {\r\n                const arrObj = {\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                };\r\n                setArr((prev) => [arrObj, ...prev]);\r\n            });\r\n    };\r\n     \r\n    // 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \r\n    useEffect(() => {\r\n        getWalkRoadInfo();\r\n    }, [])\r\n\r\n \r\n    return (\r\n        <>\r\n            <div className=\"first-ontainer\" style={{\r\n                height: window.screen.availHeight,\r\n                width:\"100%\"\r\n            }}>\r\n                <h1 >\r\n                    시각장애인의 눈과 발이 되어주세요.\r\n                </h1>\r\n                <h3>\r\n                    {`\r\n산책로 정보를 입력하시면, \r\n여가활동이 어려운 시각장애인에게\r\n다양하고 편안한 산책 경험을 제공할 수 있습니다.`}\r\n                </h3>\r\n\r\n                <div className=\"linkBox\">\r\n                    <div className=\"addWalkway_text\">산책로 정보 추가하기</div>\r\n                    <Link to=\"/add-road-info\" className=\"addWalkway\" onClick={onClick}>\r\n                        +\r\n                    </Link>\r\n                </div>\r\n                {/* {screen.availHeight} */}\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}