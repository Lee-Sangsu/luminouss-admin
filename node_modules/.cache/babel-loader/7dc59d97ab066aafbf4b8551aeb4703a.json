{"ast":null,"code":"var _s = $RefreshSig$();\n\n// eslint-disable-next-line\nimport React from \"react\";\nimport { useRecoilValue } from 'recoil';\nimport WarningState from '../recoilStates/WarningState';\nimport RoadNameState from '../recoilStates/RoadNameState';\nimport FeatureState from '../recoilStates/FeatureState';\nimport InfraListState from '../recoilStates/InfraListState';\nimport SupportInfraListState from '../recoilStates/SupportInfraListState';\nimport AroundEnvListState from '../recoilStates/AroundEnvListState';\nimport AddressState from '../recoilStates/AddressState';\nimport kakaoAuthKey from 'global/authKey';\nimport axios from 'axios';\n\nconst SetEntireStates = () => {\n  _s();\n\n  const warning = useRecoilValue(WarningState);\n  const roadName = useRecoilValue(RoadNameState);\n  const feature = useRecoilValue(FeatureState);\n  const infraList = useRecoilValue(InfraListState);\n  const supportInfraList = useRecoilValue(SupportInfraListState);\n  const aroundEnvList = useRecoilValue(AroundEnvListState);\n  const address = useRecoilValue(AddressState);\n\n  const res = async () => {\n    await axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n      headers: {\n        Authorization: `KaKaoAK ${kakaoAuthKey}`\n      }\n    }, {\n      params: {\n        query: `${roadName}`\n      }\n    }).then(console.log(res));\n  };\n\n  const EntireState = {\n    roadName: res,\n    warning: warning,\n    feature: feature,\n    infraList: infraList,\n    supportInfraList: supportInfraList,\n    aroundEnvList: aroundEnvList,\n    address: address\n  };\n  return EntireState;\n};\n\n_s(SetEntireStates, \"KjmMtgHG+UhP3FDvbAKeeSSNaiQ=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useRecoilValue, useRecoilValue, useRecoilValue, useRecoilValue, useRecoilValue];\n});\n\n_c = SetEntireStates;\nexport default SetEntireStates;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetEntireStates\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/functions/SetEntireStates.js"],"names":["React","useRecoilValue","WarningState","RoadNameState","FeatureState","InfraListState","SupportInfraListState","AroundEnvListState","AddressState","kakaoAuthKey","axios","SetEntireStates","warning","roadName","feature","infraList","supportInfraList","aroundEnvList","address","res","get","headers","Authorization","params","query","then","console","log","EntireState"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGX,cAAc,CAACC,YAAD,CAA9B;AACA,QAAMW,QAAQ,GAAGZ,cAAc,CAACE,aAAD,CAA/B;AACA,QAAMW,OAAO,GAAGb,cAAc,CAACG,YAAD,CAA9B;AACA,QAAMW,SAAS,GAAGd,cAAc,CAACI,cAAD,CAAhC;AACA,QAAMW,gBAAgB,GAAGf,cAAc,CAACK,qBAAD,CAAvC;AACA,QAAMW,aAAa,GAAGhB,cAAc,CAACM,kBAAD,CAApC;AACA,QAAMW,OAAO,GAAGjB,cAAc,CAACO,YAAD,CAA9B;;AAEA,QAAMW,GAAG,GAAG,YAAY;AACpB,UAAMT,KAAK,CAACU,GAAN,CAAU,qDAAV,EAAiE;AACnEC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,WAAUb,YAAa;AADlC;AAD0D,KAAjE,EAIH;AACCc,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAEX,QAAS;AAArB;AADT,KAJG,EAMHY,IANG,CAMEC,OAAO,CAACC,GAAR,CAAYR,GAAZ,CANF,CAAN;AAQH,GATD;;AAcA,QAAMS,WAAW,GAAG;AAChBf,IAAAA,QAAQ,EAAEM,GADM;AAEhBP,IAAAA,OAAO,EAAEA,OAFO;AAGhBE,IAAAA,OAAO,EAAEA,OAHO;AAIhBC,IAAAA,SAAS,EAAEA,SAJK;AAKhBC,IAAAA,gBAAgB,EAAEA,gBALF;AAMhBC,IAAAA,aAAa,EAAEA,aANC;AAOhBC,IAAAA,OAAO,EAAEA;AAPO,GAApB;AASA,SAAOU,WAAP;AACH,CAjCD;;GAAMjB,e;UACcV,c,EACCA,c,EACDA,c,EACEA,c,EACOA,c,EACHA,c,EACNA,c;;;KAPdU,e;AAmCN,eAAeA,eAAf","sourcesContent":["// eslint-disable-next-line\nimport React from \"react\";\nimport { useRecoilValue } from 'recoil';\nimport WarningState from '../recoilStates/WarningState';\nimport RoadNameState from '../recoilStates/RoadNameState';\nimport FeatureState from '../recoilStates/FeatureState';\nimport InfraListState from '../recoilStates/InfraListState';\nimport SupportInfraListState from '../recoilStates/SupportInfraListState';\nimport AroundEnvListState from '../recoilStates/AroundEnvListState';\nimport AddressState from '../recoilStates/AddressState';\nimport kakaoAuthKey from 'global/authKey';\nimport axios from 'axios';\n\n\nconst SetEntireStates = () => {\n    const warning = useRecoilValue(WarningState);\n    const roadName = useRecoilValue(RoadNameState);\n    const feature = useRecoilValue(FeatureState);\n    const infraList = useRecoilValue(InfraListState);\n    const supportInfraList = useRecoilValue(SupportInfraListState);\n    const aroundEnvList = useRecoilValue(AroundEnvListState);\n    const address = useRecoilValue(AddressState);\n\n    const res = async () => {\n        await axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n            headers: {\n                Authorization: `KaKaoAK ${kakaoAuthKey}`            \n            }\n        }, {\n            params: { query: `${roadName}`}\n        }).then(console.log(res));\n\n    };\n\n    \n\n\n    const EntireState = {\n        roadName: res,\n        warning: warning,\n        feature: feature,\n        infraList: infraList,\n        supportInfraList: supportInfraList,\n        aroundEnvList: aroundEnvList,\n        address: address\n    };\n    return EntireState;\n};\n\nexport default SetEntireStates;"]},"metadata":{},"sourceType":"module"}