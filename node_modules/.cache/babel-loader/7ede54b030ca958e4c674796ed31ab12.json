{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-admin/src/recoilStates/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState } from 'recoil';\nimport React from 'react';\nimport todoListState from 'components/atom/todoListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst TodoItem = ({\n  item\n}) => {\n  _s();\n\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex(listItem => listItem === item);\n\n  const editItemText = ({\n    target: {\n      value\n    }\n  }) => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      text: value\n    });\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      isComplete: !item.isComplete\n    });\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n    setTodoList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: item.text,\n      onChange: editItemText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteItem,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/recoilStates/TodoItem.js"],"names":["useRecoilState","React","todoListState","replaceItemAtIndex","arr","index","newValue","slice","removeItemAtIndex","TodoItem","item","todoList","setTodoList","findIndex","listItem","editItemText","target","value","newList","text","toggleItemCompletion","isComplete","deleteItem"],"mappings":";;;;;AAAA,SACIA,cADJ,QAES,QAFT;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkD;AAC9C,SAAO,CAAC,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,KAAb,CAAJ,EAAyBC,QAAzB,EAAmC,GAAGF,GAAG,CAACG,KAAJ,CAAUF,KAAK,GAAG,CAAlB,CAAtC,CAAP;AACH;;AAED,SAASG,iBAAT,CAA2BJ,GAA3B,EAAgCC,KAAhC,EAAuC;AACnC,SAAO,CAAC,GAAGD,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,KAAb,CAAJ,EAAyB,GAAGD,GAAG,CAACG,KAAJ,CAAUF,KAAK,GAAG,CAAlB,CAA5B,CAAP;AACH;;AAED,MAAMI,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,cAAc,CAACE,aAAD,CAA9C;AACA,QAAMG,KAAK,GAAGM,QAAQ,CAACE,SAAT,CAAoBC,QAAD,IAAcA,QAAQ,KAAKJ,IAA9C,CAAd;;AAEA,QAAMK,YAAY,GAAG,CAAC;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA;AAAD;AAAT,GAAD,KAAuB;AAC1C,UAAMC,OAAO,GAAGf,kBAAkB,CAACQ,QAAD,EAAWN,KAAX,EAAkB,EAClD,GAAGK,IAD+C;AAElDS,MAAAA,IAAI,EAAEF;AAF4C,KAAlB,CAAlC;AAKAL,IAAAA,WAAW,CAACM,OAAD,CAAX;AACD,GAPD;;AASA,QAAME,oBAAoB,GAAG,MAAM;AACjC,UAAMF,OAAO,GAAGf,kBAAkB,CAACQ,QAAD,EAAWN,KAAX,EAAkB,EAClD,GAAGK,IAD+C;AAElDW,MAAAA,UAAU,EAAE,CAACX,IAAI,CAACW;AAFgC,KAAlB,CAAlC;AAKAT,IAAAA,WAAW,CAACM,OAAD,CAAX;AACD,GAPD;;AASA,QAAMI,UAAU,GAAG,MAAM;AACvB,UAAMJ,OAAO,GAAGV,iBAAiB,CAACG,QAAD,EAAWN,KAAX,CAAjC;AAEAO,IAAAA,WAAW,CAACM,OAAD,CAAX;AACD,GAJD;;AAMF,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAER,IAAI,CAACS,IAA/B;AAAqC,MAAA,QAAQ,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvCD;;GAAMb,Q;UAC8BT,c;;;KAD9BS,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport todoListState from 'components/atom/todoListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst TodoItem = ({item}) => {\n    const [todoList, setTodoList] = useRecoilState(todoListState);\n    const index = todoList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(todoList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setTodoList(newList);\n    };\n  \n    const toggleItemCompletion = () => {\n      const newList = replaceItemAtIndex(todoList, index, {\n        ...item,\n        isComplete: !item.isComplete,\n      });\n  \n      setTodoList(newList);\n    };\n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(todoList, index);\n  \n      setTodoList(newList);\n    };\n  \n  return (\n    <div>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      {/* <input\n        type=\"checkbox\"\n        checked={item.isComplete}\n        onChange={toggleItemCompletion}\n      /> */}\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}