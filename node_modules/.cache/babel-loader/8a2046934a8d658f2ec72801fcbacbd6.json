{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-admin/src/components/About/About.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { RecoilRoot, atom, selector, useSetRecoilState, useRecoilValue } from 'recoil';\nconst todoListState = atom({\n  key: 'todoListState',\n  default: []\n});\n\nfunction TodoItem({\n  item\n}) {\n  _s();\n\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex(listItem => listItem === item);\n\n  const editItemText = ({\n    target: {\n      value\n    }\n  }) => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      text: value\n    });\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      isComplete: !item.isComplete\n    });\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n    setTodoList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: item.text,\n      onChange: editItemText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: item.isComplete,\n      onChange: toggleItemCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteItem,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoItem, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", true);\n\n_c = TodoItem;\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nfunction About() {\n  _s2();\n\n  const todoList = useRecoilValue(todoListState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoItemCreator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), todoList.map(todoItem => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: todoItem\n    }, todoItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s2(About, \"RB/bdr5YIP+aVWtUNzcpRUnXRKo=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c2 = About;\n\nfunction TodoItemCreator() {\n  _s3();\n\n  const [inputValue, setInputValue] = useState('');\n  const setTodoList = useSetRecoilState(todoListState);\n\n  const addItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false\n    }]);\n    setInputValue('');\n  };\n\n  const onChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setInputValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n} // utility for creating unique Id\n\n\n_s3(TodoItemCreator, \"gvrCM0Rx032ow4M2LLvenE72TyU=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c3 = TodoItemCreator;\nlet id = 0;\n\nfunction getId() {\n  return id++;\n} // const About = () => {\n//     return (\n//         <>\n//             <span>여따 todo LIST 만들거야</span>\n//             <div>\n//                 <TextInput />\n//                 <CharacterCount />\n//             </div>\n//         </>\n//     );\n// };\n\n\nexport default About;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TodoItem\");\n$RefreshReg$(_c2, \"About\");\n$RefreshReg$(_c3, \"TodoItemCreator\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/components/About/About.js"],"names":["React","useState","RecoilRoot","atom","selector","useSetRecoilState","useRecoilValue","todoListState","key","default","TodoItem","item","todoList","setTodoList","useRecoilState","index","findIndex","listItem","editItemText","target","value","newList","replaceItemAtIndex","text","toggleItemCompletion","isComplete","deleteItem","removeItemAtIndex","arr","newValue","slice","About","map","todoItem","id","TodoItemCreator","inputValue","setInputValue","addItem","oldTodoList","getId","onChange"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {\n    RecoilRoot,\n    atom,\n    selector,\n    useSetRecoilState,\n    useRecoilValue,\n  } from 'recoil';\n\nconst todoListState = atom({\n  key: 'todoListState',\n  default: [],\n});\nfunction TodoItem({item}) {\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex((listItem) => listItem === item);\n\n  const editItemText = ({target: {value}}) => {\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...item,\n      text: value,\n    });\n\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...item,\n      isComplete: !item.isComplete,\n    });\n\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n\n    setTodoList(newList);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      <input\n        type=\"checkbox\"\n        checked={item.isComplete}\n        onChange={toggleItemCompletion}\n      />\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n}\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nfunction About() {\n  const todoList = useRecoilValue(todoListState);\n\n  return (\n    <>\n      {/* <TodoListStats /> */}\n      {/* <TodoListFilters /> */}\n      <TodoItemCreator />\n\n      {todoList.map((todoItem) => (\n        <TodoItem key={todoItem.id} item={todoItem} />\n      ))}\n    </>\n  );\n}\n\nfunction TodoItemCreator() {\n    const [inputValue, setInputValue] = useState('');\n    const setTodoList = useSetRecoilState(todoListState);\n  \n    const addItem = () => {\n      setTodoList((oldTodoList) => [\n        ...oldTodoList,\n        {\n          id: getId(),\n          text: inputValue,\n          isComplete: false,\n        },\n      ]);\n      setInputValue('');\n    };\n  \n    const onChange = ({target: {value}}) => {\n      setInputValue(value);\n    };\n  \n    return (\n      <div>\n        <input type=\"text\" value={inputValue} onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n  }\n  \n  // utility for creating unique Id\n  let id = 0;\n  function getId() {\n    return id++;\n}\n\n// const About = () => {\n//     return (\n//         <>\n//             <span>여따 todo LIST 만들거야</span>\n//             <div>\n//                 <TextInput />\n//                 <CharacterCount />\n//             </div>\n//         </>\n//     );\n// };\n\n\nexport default About;"]},"metadata":{},"sourceType":"module"}