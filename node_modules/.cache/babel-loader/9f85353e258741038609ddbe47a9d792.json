{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport firebase from 'global/fbase';\nimport { useHistory } from 'react-router-dom'; //updateProfile({displayName 추가 만들기})\n\nconst Profile = () => {\n  _s();\n\n  const [arr, setArr] = useState([]);\n  const history = useHistory();\n  const user = firebase.auth().currentUser;\n\n  const onLogOutClick = () => {\n    firebase.auth().signOut();\n    history.push(\"/\");\n  }; //currentUser updateProfile({displayName : input(state로)}) 이름 없을 때에는 null {userName ? <프로필> : <empty>}\n\n  /* Kakao로 로그인 하면 dependency로 선언한 user가 null이 떠버리니까 카카오로 로그인 했을 때 \n  1. firestore에 카카오 유저 컬렉션 추가\n  2. uid 필드 생성해서 유저 정보 저장\n  3. 아래 getRoadInfoCurrentUser() 함수는 ,,,음.. 그래도 디펜던시 해결이 안되네ㅠㅠ  아니면 아예 이메일 로그인을 지울까 ㅋㅋㅋ\n  */\n\n\n  const getRoadInfoCurrentUser = useCallback(async () => {\n    try {\n      const road = await firebase.firestore().collection('WalkRoad').where('user', '==', `${user.uid}`).get();\n      road.forEach(doc => {\n        const arrObj = { ...doc.data(),\n          id: doc.id\n        };\n        setArr(prev => [arrObj, ...prev]);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [user.uid]);\n  useEffect(() => {\n    if (user) {\n      getRoadInfoCurrentUser();\n    }\n  }, [getRoadInfoCurrentUser, user]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"\\uD504\\uB85C\\uD544\"), arr ? arr.map(data => /*#__PURE__*/React.createElement(\"div\", {\n    key: data.id,\n    style: {\n      marginTop: \"20px\",\n      marginBottom: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, data.roadName))) : /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }\n  }, \"\\uC0B0\\uCC45\\uB85C \\uC815\\uBCF4 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911..\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onLogOutClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Log Out\"));\n};\n\n_s(Profile, \"tA8xqTkCH1Uu5Gt9oVeCftV5Qg4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Profile.js"],"names":["React","useCallback","useEffect","useState","firebase","useHistory","Profile","arr","setArr","history","user","auth","currentUser","onLogOutClick","signOut","push","getRoadInfoCurrentUser","road","firestore","collection","where","uid","get","forEach","doc","arrObj","data","id","prev","e","console","log","map","marginTop","marginBottom","roadName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB,C,CAEA;;AAGA,MAAMC,OAAO,GAAI,MAAM;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMM,OAAO,GAAGJ,UAAU,EAA1B;AAEA,QAAMK,IAAI,GAAGN,QAAQ,CAACO,IAAT,GAAgBC,WAA7B;;AACA,QAAMC,aAAa,GAAG,MAAM;AACxBT,IAAAA,QAAQ,CAACO,IAAT,GAAgBG,OAAhB;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACH,GAHD,CALqB,CAUrB;;AACA;AACF;AACA;AACA;AACA;;;AACE,QAAMC,sBAAsB,GAAGf,WAAW,CAAC,YAAY;AACrD,QAAI;AACF,YAAMgB,IAAI,GAAG,MAAMb,QAAQ,CAACc,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,KAA5C,CAAkD,MAAlD,EAA0D,IAA1D,EAAiE,GAAEV,IAAI,CAACW,GAAI,EAA5E,EAA+EC,GAA/E,EAAnB;AAEAL,MAAAA,IAAI,CAACM,OAAL,CAAaC,GAAG,IAAI;AAClB,cAAMC,MAAM,GAAG,EACb,GAAGD,GAAG,CAACE,IAAJ,EADU;AAEbC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAFK,SAAf;AAIAnB,QAAAA,MAAM,CAAEoB,IAAD,IAAU,CAACH,MAAD,EAAS,GAAGG,IAAZ,CAAX,CAAN;AACD,OAND;AAOD,KAVD,CAUE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAdyC,EAcvC,CAACnB,IAAI,CAACW,GAAN,CAduC,CAA1C;AAgBAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACRM,MAAAA,sBAAsB;AACvB;AACF,GAJQ,EAIN,CAACA,sBAAD,EAAyBN,IAAzB,CAJM,CAAT;AAMA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGH,GAAG,GAAGA,GAAG,CAACyB,GAAJ,CAASN,IAAD,iBAAU;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,KAAK,EAAE;AAC/CM,MAAAA,SAAS,EAAC,MADqC;AAE/CC,MAAAA,YAAY,EAAC;AAFkC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACS,QAAV,CAJqB,CAAlB,CAAH,gBAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAPX,eAQE;AAAQ,IAAA,OAAO,EAAEtB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CADF;AAYD,CAlDD;;GAAMP,O;UAEYD,U;;;KAFZC,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React, {useCallback, useEffect, useState}  from 'react';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\n\n//updateProfile({displayName 추가 만들기})\n\n\nconst Profile =  () => {\n  const [arr, setArr] = useState([]);\n  const history = useHistory();\n\n  const user = firebase.auth().currentUser;\n  const onLogOutClick = () => {\n      firebase.auth().signOut();\n      history.push(\"/\");\n  };\n\n  //currentUser updateProfile({displayName : input(state로)}) 이름 없을 때에는 null {userName ? <프로필> : <empty>}\n  /* Kakao로 로그인 하면 dependency로 선언한 user가 null이 떠버리니까 카카오로 로그인 했을 때 \n  1. firestore에 카카오 유저 컬렉션 추가\n  2. uid 필드 생성해서 유저 정보 저장\n  3. 아래 getRoadInfoCurrentUser() 함수는 ,,,음.. 그래도 디펜던시 해결이 안되네ㅠㅠ  아니면 아예 이메일 로그인을 지울까 ㅋㅋㅋ\n  */\n  const getRoadInfoCurrentUser = useCallback(async () => {\n    try {\n      const road = await firebase.firestore().collection('WalkRoad').where('user', '==', `${user.uid}`).get()\n\n      road.forEach(doc => {\n        const arrObj = {\n          ...doc.data(),\n          id: doc.id,\n        };\n        setArr((prev) => [arrObj, ...prev]);\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }, [user.uid]) ;\n\n  useEffect(() => {\n    if (user) {\n      getRoadInfoCurrentUser();\n    }\n  }, [getRoadInfoCurrentUser, user])\n\n  return (\n    <>\n      <h2>프로필</h2> \n      {arr ? arr.map((data) => <div key={data.id} style={{\n          marginTop:\"20px\",\n          marginBottom:\"30px\"\n      }}>\n          <h4>{data.roadName}</h4>\n      </div> ):<h5>산책로 정보 불러오는 중..</h5>}\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}