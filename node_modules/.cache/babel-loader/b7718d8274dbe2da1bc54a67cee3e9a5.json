{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"components/styles/Home.css\";\nimport FirstIntroduction from 'components/molecules/ForHome/FirstIntroduction';\nimport Test from 'components/molecules/ForHome/Test';\nimport SecondIntroduction from 'components/molecules/ForHome/SecondIntroduction';\nimport ReactPageScroller from 'react-page-scroller';\n\nconst Home = ({\n  isLoggedIn\n}) => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const handlePageChane = number => {\n    setCurrentPage(number);\n\n    if (number === 1) {\n      document.getElementById('nav').style.display = 'none';\n    } else if (number === 0 || number === 2 || number === 3) {\n      document.getElementById('nav').style.display = 'block';\n    }\n\n    console.log(number);\n  }; //prop 바뀌면 리렌더링 isLoggedIn state 바뀜\n\n\n  const history = useHistory(); //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\n\n  const onRoadInfoClick = event => {\n    event.preventDefault();\n\n    if (isLoggedIn) {\n      history.push('/add-road-info');\n    } else {\n      window.alert(\"산책로 정보를 추가하려면 로그인이 필요합니다.\");\n      history.push('sign-in');\n    }\n  }; // 아래로 내려가는 버튼 눌렀을 때\n\n\n  const divRef = useRef(null);\n  const imgRef = useRef();\n\n  const moveScroll = () => {\n    divRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  const firstmoveScroll = () => {\n    imgRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }; // 앱 체험하기 부분 useEffect 말고 react-scroll로 구현\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactPageScroller, {\n    pageOnChange: handlePageChane,\n    customPageNumber: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FirstIntroduction, {\n    onRoadInfoClick: onRoadInfoClick,\n    firstmoveScroll: firstmoveScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Test, {\n    moveScroll: moveScroll,\n    imgRef: imgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SecondIntroduction, {\n    divRef: divRef,\n    onRoadInfoClick: onRoadInfoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(Home, \"NRnXqrs0AkCYCoHDAxJXnCnMBgM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Home.js"],"names":["React","useRef","useState","useHistory","FirstIntroduction","Test","SecondIntroduction","ReactPageScroller","Home","isLoggedIn","currentPage","setCurrentPage","handlePageChane","number","document","getElementById","style","display","console","log","history","onRoadInfoClick","event","preventDefault","push","window","alert","divRef","imgRef","moveScroll","current","scrollIntoView","behavior","firstmoveScroll"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,4BAAP;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,IAAI,GAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMU,eAAe,GAAGC,MAAM,IAAI;AAC9BF,IAAAA,cAAc,CAACE,MAAD,CAAd;;AACA,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACdC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,OAArC,GAA+C,MAA/C;AACH,KAFD,MAEO,IAAIJ,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA3B,IAAgCA,MAAM,KAAK,CAA/C,EAAmD;AACtDC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,OAArC,GAA+C,OAA/C;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,GARD,CAH8B,CAa9B;;;AACA,QAAMO,OAAO,GAAGjB,UAAU,EAA1B,CAd8B,CAgB9B;;AACA,QAAMkB,eAAe,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAId,UAAJ,EAAe;AACXW,MAAAA,OAAO,CAACI,IAAR,CAAa,gBAAb;AACH,KAFD,MAEO;AACHC,MAAAA,MAAM,CAACC,KAAP,CAAa,2BAAb;AACAN,MAAAA,OAAO,CAACI,IAAR,CAAa,SAAb;AACH;AACJ,GARD,CAjB8B,CA2B9B;;;AACA,QAAMG,MAAM,GAAG1B,MAAM,CAAC,IAAD,CAArB;AACA,QAAM2B,MAAM,GAAG3B,MAAM,EAArB;;AAEA,QAAM4B,UAAU,GAAG,MAAM;AACrBF,IAAAA,MAAM,CAACG,OAAP,CAAeC,cAAf,CAA8B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA9B;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BL,IAAAA,MAAM,CAACE,OAAP,CAAeC,cAAf,CAA8B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA9B;AACH,GAFD,CAnC8B,CAuC9B;;;AAEA,sBACI,uDACI,oBAAC,iBAAD;AAAmB,IAAA,YAAY,EAAEpB,eAAjC;AAAkD,IAAA,gBAAgB,EAAEF,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,eAAe,EAAEW,eAApC;AAAqD,IAAA,eAAe,EAAEY,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEJ,UAAlB;AAA8B,IAAA,MAAM,EAAED,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI,oBAAC,kBAAD;AAAoB,IAAA,MAAM,EAAED,MAA5B;AAAoC,IAAA,eAAe,EAAEN,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAaH,CAtDD;;GAAMb,I;UAccL,U;;;KAddK,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\nimport FirstIntroduction from 'components/molecules/ForHome/FirstIntroduction';\r\nimport Test from 'components/molecules/ForHome/Test';\r\nimport SecondIntroduction from 'components/molecules/ForHome/SecondIntroduction';\r\nimport ReactPageScroller from 'react-page-scroller';\r\n\r\nconst Home  = ({ isLoggedIn }) => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const handlePageChane = number => {\r\n        setCurrentPage(number);\r\n        if (number === 1) {\r\n            document.getElementById('nav').style.display = 'none';\r\n        } else if (number === 0 || number === 2 || number === 3)  {\r\n            document.getElementById('nav').style.display = 'block';\r\n        }\r\n        console.log(number);\r\n    };\r\n\r\n    //prop 바뀌면 리렌더링 isLoggedIn state 바뀜\r\n    const history = useHistory();\r\n\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    const onRoadInfoClick = (event) => {\r\n        event.preventDefault();\r\n        if (isLoggedIn){\r\n            history.push('/add-road-info');\r\n        } else {\r\n            window.alert(\"산책로 정보를 추가하려면 로그인이 필요합니다.\");\r\n            history.push('sign-in');\r\n        }\r\n    };\r\n\r\n    // 아래로 내려가는 버튼 눌렀을 때\r\n    const divRef = useRef(null);\r\n    const imgRef = useRef();\r\n\r\n    const moveScroll = () => {\r\n        divRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const firstmoveScroll = () => {\r\n        imgRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    // 앱 체험하기 부분 useEffect 말고 react-scroll로 구현\r\n    \r\n    return (\r\n        <>\r\n            <ReactPageScroller pageOnChange={handlePageChane} customPageNumber={currentPage}>\r\n                <FirstIntroduction onRoadInfoClick={onRoadInfoClick} firstmoveScroll={firstmoveScroll} />\r\n                \r\n                <Test moveScroll={moveScroll} imgRef={imgRef} />\r\n\r\n                <SecondIntroduction divRef={divRef} onRoadInfoClick={onRoadInfoClick} />\r\n            </ReactPageScroller>\r\n            \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}