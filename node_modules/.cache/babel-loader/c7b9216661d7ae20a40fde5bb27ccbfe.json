{"ast":null,"code":"var _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/src/components/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"components/styles/Home.css\"; // import firebase from \"global/fbase\";\n// import FirestoreData from 'components/molecules/FirestoreData';\n\nconst Home = ({\n  isLoggedIn\n}) => {\n  _s();\n\n  //prop 바뀌면 리렌더링 isLoggedIn state 바뀌어서\n  const history = useHistory(); //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\n\n  const onClick = event => {\n    event.preventDefault();\n\n    if (isLoggedIn) {\n      history.push('/add-road-info');\n    } else {\n      window.alert(\"Login required\");\n      history.push('sign-in');\n    }\n  };\n\n  const [arr, setArr] = useState([]); // 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \n\n  useEffect(() => {\n    const a = [];\n    firebase.firestore().collection('WalkRoad').get().then(res => {\n      res.forEach(doc => {\n        a.push(doc.data().roadName);\n      });\n      setArr(a);\n      console.log(res); // 여러번 들어가면 위험\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uC2DC\\uAC01\\uC7A5\\uC560\\uC778\\uC758 \\uB208\\uACFC \\uBC1C\\uC774 \\uB418\\uC5B4\\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"explanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"\\uBB38\\uC81C \\uC124\\uBA85...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linkBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addWalkway_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"\\uC0B0\\uCC45\\uB85C \\uC815\\uBCF4 \\uCD94\\uAC00\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/add-road-info\",\n    className: \"addWalkway\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"+\")), console.log(arr)));\n};\n\n_s(Home, \"1iD/UmMu5WyOQuJ59yJhxaams28=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Home.js"],"names":["React","useEffect","Link","useHistory","Home","isLoggedIn","history","onClick","event","preventDefault","push","window","alert","arr","setArr","useState","a","firebase","firestore","collection","get","then","res","forEach","doc","data","roadName","console","log","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,4BAAP,C,CACA;AACA;;AAGA,MAAMC,IAAI,GAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAAE;AAChC,QAAMC,OAAO,GAAGH,UAAU,EAA1B,CAD8B,CAE9B;;AACA,QAAMI,OAAO,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,UAAJ,EAAe;AACXC,MAAAA,OAAO,CAACI,IAAR,CAAa,gBAAb;AACH,KAFD,MAEO;AACHC,MAAAA,MAAM,CAACC,KAAP,CAAa,gBAAb;AACAN,MAAAA,OAAO,CAACI,IAAR,CAAa,SAAb;AACH;AACJ,GARD;;AASA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAeC,QAAQ,CAAC,EAAD,CAA7B,CAZ8B,CAc9B;;AACAd,EAAAA,SAAS,CAAC,MAAQ;AACd,UAAMe,CAAC,GAAG,EAAV;AACAC,IAAAA,QAAQ,CAACC,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EACCC,GADD,GAECC,IAFD,CAEOC,GAAD,IAAS;AACXA,MAAAA,GAAG,CAACC,OAAJ,CAAaC,GAAD,IAAS;AACjBR,QAAAA,CAAC,CAACN,IAAF,CAAOc,GAAG,CAACC,IAAJ,GAAWC,QAAlB;AACH,OAFD;AAGAZ,MAAAA,MAAM,CAACE,CAAD,CAAN;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EALW,CAKO;AACrB,KARD,EASCO,KATD,CASQC,KAAD,IAAW;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAXD;AAYH,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGADJ,eAII;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,eAQI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,gBAAT;AAA0B,IAAA,SAAS,EAAC,YAApC;AAAiD,IAAA,OAAO,EAAEvB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CARJ,EAgBKoB,OAAO,CAACC,GAAR,CAAYf,GAAZ,CAhBL,CADJ,CADJ;AAsBH,CArDD;;GAAMT,I;UACcD,U;;;KADdC,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\n// import firebase from \"global/fbase\";\r\n// import FirestoreData from 'components/molecules/FirestoreData';\r\n\r\n\r\nconst Home  = ({ isLoggedIn }) => { //prop 바뀌면 리렌더링 isLoggedIn state 바뀌어서\r\n    const history = useHistory();\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        if (isLoggedIn){\r\n            history.push('/add-road-info');\r\n        } else {\r\n            window.alert(\"Login required\");\r\n            history.push('sign-in');\r\n        }\r\n    };\r\n    const [arr, setArr]= useState([]);\r\n     \r\n    // 화면 켜질때 딱 한번만 array에 담는걸 어떻게 할까.. \r\n    useEffect((  ) => {\r\n        const a = [];\r\n        firebase.firestore().collection('WalkRoad')\r\n        .get()\r\n        .then((res) => {\r\n            res.forEach((doc) => {\r\n                a.push(doc.data().roadName);\r\n            });\r\n            setArr(a);\r\n            console.log(res); // 여러번 들어가면 위험\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }, [])\r\n \r\n    return (\r\n        <>\r\n            <div className=\"mainContainer\">\r\n                <h1 className=\"mainTitle\">\r\n                    시각장애인의 눈과 발이 되어주세요.\r\n                </h1>\r\n                <h3 className=\"explanation\">\r\n                    문제 설명...\r\n                </h3>\r\n\r\n                <div className=\"linkBox\">\r\n                    <div className=\"addWalkway_text\">산책로 정보 추가하기</div>\r\n                    <Link to=\"/add-road-info\" className=\"addWalkway\" onClick={onClick}>\r\n                        +\r\n                    </Link>\r\n                </div>\r\n                {/* {arr.map((roadName, index) => <FirestoreData key={index} item={roadName} />)} */}\r\n                {/* {console.log(newArr)} */}\r\n                {console.log(arr)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}