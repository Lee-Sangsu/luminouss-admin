{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-admin/src/components/molecules/InputAddress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport AddressState from 'recoilStates/AddressState';\n\nconst InputAddress = () => {\n  _s();\n\n  const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n\n  const setAddress = useSetRecoilState(AddressState);\n  const address = useRecoilValue(AddressState);\n  var options = [\"종로구\", \"중구\", \"용산구\", \"성동구\", \"광진구\", \"동대문구\", \"중랑구\", \"성북구\", \"강북구\", \"도봉구\", \"노원구\", \"은평구\", \"서대문구\", \"마포구\", \"양천구\", \"강서구\", \"구로구\", \"금천구\", \"영등포구\", \"동작구\", \"관악구\", \"서초구\", \"강남구\", \"송파구\", \"강동구\"];\n  options.sort();\n\n  const onSelect = event => {\n    setAddress({\n      addressOption: event.value\n    });\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"세부 주소\") {\n      setAddress({\n        detailedAddress: value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      options: options,\n      onChange: onSelect,\n      value: address,\n      placeholder: \"Select an option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"\\uC138\\uBD80 \\uC8FC\\uC18C\",\n      value: address,\n      onChange: onChange,\n      placeholder: \"\\uC138\\uBD80 \\uC8FC\\uC18C\\uB97C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC6A9\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(InputAddress, \"XBD6UFV/TtzUx6I/lKK/vw1z6RY=\", false, function () {\n  return [useSetRecoilState, useRecoilValue];\n});\n\n_c = InputAddress;\nexport default InputAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputAddress\");","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-admin/src/components/molecules/InputAddress.js"],"names":["React","useState","Dropdown","useSetRecoilState","useRecoilValue","AddressState","InputAddress","state","setState","setAddress","address","options","sort","onSelect","event","addressOption","value","onChange","target","name","detailedAddress"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,0BAAP;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,QAAgD,QAAhD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADuB,CACiB;;AACxC,QAAMQ,UAAU,GAAGN,iBAAiB,CAACE,YAAD,CAApC;AACA,QAAMK,OAAO,GAAGN,cAAc,CAACC,YAAD,CAA9B;AAEA,MAAIM,OAAO,GAAG,CACV,KADU,EACH,IADG,EACG,KADH,EACU,KADV,EACiB,KADjB,EACwB,MADxB,EACgC,KADhC,EACuC,KADvC,EAC8C,KAD9C,EACqD,KADrD,EAC4D,KAD5D,EACmE,KADnE,EAC0E,MAD1E,EACkF,KADlF,EACyF,KADzF,EACgG,KADhG,EACuG,KADvG,EAC8G,KAD9G,EACqH,MADrH,EAC6H,KAD7H,EACoI,KADpI,EAC2I,KAD3I,EACkJ,KADlJ,EACyJ,KADzJ,EACgK,KADhK,CAAd;AAGAA,EAAAA,OAAO,CAACC,IAAR;;AACA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBL,IAAAA,UAAU,CAAC;AAACM,MAAAA,aAAa,EAAED,KAAK,CAACE;AAAtB,KAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIH,KAAD,IAAW;AACxB,UAAM;AACFI,MAAAA,MAAM,EAAE;AACJC,QAAAA,IADI;AACEH,QAAAA;AADF;AADN,QAIFF,KAJJ;;AAKA,QAAIK,IAAI,KAAK,OAAb,EAAsB;AAClBV,MAAAA,UAAU,CAAC;AAACW,QAAAA,eAAe,EAAEJ;AAAlB,OAAD,CAAV;AACH;AACJ,GATD;;AAWA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEL,OAAnB;AAA4B,MAAA,QAAQ,EAAEE,QAAtC;AAAgD,MAAA,KAAK,EAAEH,OAAvD;AAAgE,MAAA,WAAW,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAoB,MAAA,KAAK,EAAEA,OAA3B;AAAoC,MAAA,QAAQ,EAAEO,QAA9C;AAAwD,MAAA,WAAW,EAAC,sEAApE;AAAoF,MAAA,QAAQ;AAA5F;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA9BD;;GAAMX,Y;UAEiBH,iB,EACHC,c;;;KAHdE,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport AddressState from 'recoilStates/AddressState';\n\nconst InputAddress = () => {\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const setAddress = useSetRecoilState(AddressState);\n    const address = useRecoilValue(AddressState);\n\n    var options = [\n        \"종로구\", \"중구\", \"용산구\", \"성동구\", \"광진구\", \"동대문구\", \"중랑구\", \"성북구\", \"강북구\", \"도봉구\", \"노원구\", \"은평구\", \"서대문구\", \"마포구\", \"양천구\", \"강서구\", \"구로구\", \"금천구\", \"영등포구\", \"동작구\", \"관악구\", \"서초구\", \"강남구\", \"송파구\", \"강동구\"\n    ];\n    options.sort();\n    const onSelect = (event) => {\n        setAddress({addressOption: event.value});\n    };\n\n    const onChange = (event) => {\n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"세부 주소\") {\n            setAddress({detailedAddress: value});\n        }\n    };\n\n    return (\n        <>\n            <Dropdown options={options} onChange={onSelect} value={address} placeholder=\"Select an option\" />\n            <input name=\"세부 주소\" value={address} onChange={onChange} placeholder=\"세부 주소를 작성해주세용\" required/>\n        </>\n    )\n};\n\nexport default InputAddress;"]},"metadata":{},"sourceType":"module"}