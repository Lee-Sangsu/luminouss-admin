{"ast":null,"code":"import _slicedToArray from\"/Users/leesangsu/\\u1106\\u116E\\u11AB\\u1109\\u1165/GitHub/luminouss-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import{useHistory}from\"react-router-dom\";import\"components/styles/Home.css\";import FirstIntroduction from'components/molecules/ForHome/FirstIntroduction';import Test from'components/molecules/ForHome/Test';import SecondIntroduction from'components/molecules/ForHome/SecondIntroduction';import ReactPageScroller from'react-page-scroller';var Home=function Home(_ref){var isLoggedIn=_ref.isLoggedIn;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var handlePageChane=function handlePageChane(number){setCurrentPage(number);if(number===1){document.getElementById('nav').style.display='none';}else if(number===0||number===2||number===3){document.getElementById('nav').style.display='block';}console.log(number);};//prop 바뀌면 리렌더링 isLoggedIn state 바뀜\nvar history=useHistory();//login 안 된 경우, 로그인 필요합니다 알러트 띄우기\nvar onRoadInfoClick=function onRoadInfoClick(event){event.preventDefault();if(isLoggedIn){history.push('/add-road-info');}else{window.alert(\"산책로 정보를 추가하려면 로그인이 필요합니다.\");history.push('sign-in');}};// 아래로 내려가는 버튼 눌렀을 때\nvar divRef=useRef(null);var imgRef=useRef();var moveScroll=function moveScroll(){divRef.current.scrollIntoView({behavior:'smooth'});};var firstmoveScroll=function firstmoveScroll(){imgRef.current.scrollIntoView({behavior:'smooth'});};// 앱 체험하기 부분 useEffect 말고 react-scroll로 구현\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ReactPageScroller,{pageOnChange:handlePageChane,customPageNumber:currentPage},/*#__PURE__*/React.createElement(FirstIntroduction,{onRoadInfoClick:onRoadInfoClick,firstmoveScroll:firstmoveScroll}),/*#__PURE__*/React.createElement(Test,{moveScroll:moveScroll,imgRef:imgRef}),/*#__PURE__*/React.createElement(SecondIntroduction,{divRef:divRef,onRoadInfoClick:onRoadInfoClick})));};export default Home;","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Home.js"],"names":["React","useRef","useState","useHistory","FirstIntroduction","Test","SecondIntroduction","ReactPageScroller","Home","isLoggedIn","currentPage","setCurrentPage","handlePageChane","number","document","getElementById","style","display","console","log","history","onRoadInfoClick","event","preventDefault","push","window","alert","divRef","imgRef","moveScroll","current","scrollIntoView","behavior","firstmoveScroll"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,QAAvB,KAAsC,OAAtC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,4BAAP,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gDAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,mCAAjB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,iDAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA,GAAMC,CAAAA,IAAI,CAAI,QAARA,CAAAA,IAAQ,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,eACQP,QAAQ,CAAC,CAAD,CADhB,wCACvBQ,WADuB,eACVC,cADU,eAG9B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,MAAM,CAAI,CAC9BF,cAAc,CAACE,MAAD,CAAd,CACA,GAAIA,MAAM,GAAK,CAAf,CAAkB,CACdC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,OAArC,CAA+C,MAA/C,CACH,CAFD,IAEO,IAAIJ,MAAM,GAAK,CAAX,EAAgBA,MAAM,GAAK,CAA3B,EAAgCA,MAAM,GAAK,CAA/C,CAAmD,CACtDC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAA/B,CAAqCC,OAArC,CAA+C,OAA/C,CACH,CACDC,OAAO,CAACC,GAAR,CAAYN,MAAZ,EACH,CARD,CAUA;AACA,GAAMO,CAAAA,OAAO,CAAGjB,UAAU,EAA1B,CAEA;AACA,GAAMkB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/BA,KAAK,CAACC,cAAN,GACA,GAAId,UAAJ,CAAe,CACXW,OAAO,CAACI,IAAR,CAAa,gBAAb,EACH,CAFD,IAEO,CACHC,MAAM,CAACC,KAAP,CAAa,2BAAb,EACAN,OAAO,CAACI,IAAR,CAAa,SAAb,EACH,CACJ,CARD,CAUA;AACA,GAAMG,CAAAA,MAAM,CAAG1B,MAAM,CAAC,IAAD,CAArB,CACA,GAAM2B,CAAAA,MAAM,CAAG3B,MAAM,EAArB,CAEA,GAAM4B,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBF,MAAM,CAACG,OAAP,CAAeC,cAAf,CAA8B,CAAEC,QAAQ,CAAE,QAAZ,CAA9B,EACH,CAFD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BL,MAAM,CAACE,OAAP,CAAeC,cAAf,CAA8B,CAAEC,QAAQ,CAAE,QAAZ,CAA9B,EACH,CAFD,CAIA;AAEA,mBACI,qDACI,oBAAC,iBAAD,EAAmB,YAAY,CAAEpB,eAAjC,CAAkD,gBAAgB,CAAEF,WAApE,eACI,oBAAC,iBAAD,EAAmB,eAAe,CAAEW,eAApC,CAAqD,eAAe,CAAEY,eAAtE,EADJ,cAGI,oBAAC,IAAD,EAAM,UAAU,CAAEJ,UAAlB,CAA8B,MAAM,CAAED,MAAtC,EAHJ,cAKI,oBAAC,kBAAD,EAAoB,MAAM,CAAED,MAA5B,CAAoC,eAAe,CAAEN,eAArD,EALJ,CADJ,CADJ,CAaH,CAtDD,CAwDA,cAAeb,CAAAA,IAAf","sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\nimport FirstIntroduction from 'components/molecules/ForHome/FirstIntroduction';\r\nimport Test from 'components/molecules/ForHome/Test';\r\nimport SecondIntroduction from 'components/molecules/ForHome/SecondIntroduction';\r\nimport ReactPageScroller from 'react-page-scroller';\r\n\r\nconst Home  = ({ isLoggedIn }) => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const handlePageChane = number => {\r\n        setCurrentPage(number);\r\n        if (number === 1) {\r\n            document.getElementById('nav').style.display = 'none';\r\n        } else if (number === 0 || number === 2 || number === 3)  {\r\n            document.getElementById('nav').style.display = 'block';\r\n        }\r\n        console.log(number);\r\n    };\r\n\r\n    //prop 바뀌면 리렌더링 isLoggedIn state 바뀜\r\n    const history = useHistory();\r\n\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    const onRoadInfoClick = (event) => {\r\n        event.preventDefault();\r\n        if (isLoggedIn){\r\n            history.push('/add-road-info');\r\n        } else {\r\n            window.alert(\"산책로 정보를 추가하려면 로그인이 필요합니다.\");\r\n            history.push('sign-in');\r\n        }\r\n    };\r\n\r\n    // 아래로 내려가는 버튼 눌렀을 때\r\n    const divRef = useRef(null);\r\n    const imgRef = useRef();\r\n\r\n    const moveScroll = () => {\r\n        divRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const firstmoveScroll = () => {\r\n        imgRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    // 앱 체험하기 부분 useEffect 말고 react-scroll로 구현\r\n    \r\n    return (\r\n        <>\r\n            <ReactPageScroller pageOnChange={handlePageChane} customPageNumber={currentPage}>\r\n                <FirstIntroduction onRoadInfoClick={onRoadInfoClick} firstmoveScroll={firstmoveScroll} />\r\n                \r\n                <Test moveScroll={moveScroll} imgRef={imgRef} />\r\n\r\n                <SecondIntroduction divRef={divRef} onRoadInfoClick={onRoadInfoClick} />\r\n            </ReactPageScroller>\r\n            \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}