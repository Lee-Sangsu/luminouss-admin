{"ast":null,"code":"import React from'react';import firebase from'global/fbase';import{useHistory}from'react-router-dom';import Kakao from'kakaojs';import{useSetRecoilState}from'recoil';import InitializeState from'recoilStates/InitializeState';import useRecoilState from'recoilStates/IsLoggedInState';//updateProfile({displayName 추가 만들기})\nvar Profile=function Profile(){// const [arr, setArr] = useState([]);\nvar history=useHistory();var setInit=useSetRecoilState(InitializeState);var setLoggedIn=useSetRecoilState(useRecoilState);var user=firebase.auth().currentUser;var onLogOutClick=function onLogOutClick(){if(user){firebase.auth().signOut();history.push(\"/\");}else{console.log(Kakao.Auth.getAccessToken());Kakao.Auth.logout(function(){console.log(Kakao.Auth.getAccessToken());});setInit(true);setLoggedIn(false);history.push(\"/\");}};//currentUser updateProfile({displayName : input(state로)}) 이름 없을 때에는 null {userName ? <프로필> : <empty>}\n/*\n  import {useCallback, useEffect, useState}\n  const getRoadInfoCurrentUser = useCallback(async () => {\n    try {\n      const road = await firebase.firestore().collection('WalkRoad').where('user', '==', `${user.uid}`).get()\n\n      road.forEach(doc => {\n        const arrObj = {\n          ...doc.data(),\n          id: doc.id,\n        };\n        setArr((prev) => [arrObj, ...prev]);\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }, [user.uid]) ;\n\n  useEffect(() => {\n    if (user) {\n      getRoadInfoCurrentUser();\n    }\n  }, [getRoadInfoCurrentUser, user])*/return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"\\uD504\\uB85C\\uD544\"),/*#__PURE__*/React.createElement(\"button\",{onClick:onLogOutClick},\"Log Out\"));};export default Profile;","map":{"version":3,"sources":["/Users/leesangsu/문서/GitHub/luminouss-web/src/components/pages/Profile.js"],"names":["React","firebase","useHistory","Kakao","useSetRecoilState","InitializeState","useRecoilState","Profile","history","setInit","setLoggedIn","user","auth","currentUser","onLogOutClick","signOut","push","console","log","Auth","getAccessToken","logout"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAAQC,iBAAR,KAAgC,QAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CAGA;AAGA,GAAMC,CAAAA,OAAO,CAAI,QAAXA,CAAAA,OAAW,EAAM,CACrB;AACA,GAAMC,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAEA,GAAMO,CAAAA,OAAO,CAAGL,iBAAiB,CAACC,eAAD,CAAjC,CACA,GAAMK,CAAAA,WAAW,CAAGN,iBAAiB,CAACE,cAAD,CAArC,CAEA,GAAMK,CAAAA,IAAI,CAAGV,QAAQ,CAACW,IAAT,GAAgBC,WAA7B,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIH,IAAJ,CAAU,CACRV,QAAQ,CAACW,IAAT,GAAgBG,OAAhB,GACAP,OAAO,CAACQ,IAAR,CAAa,GAAb,EACD,CAHD,IAGO,CACLC,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,IAAN,CAAWC,cAAX,EAAZ,EACAjB,KAAK,CAACgB,IAAN,CAAWE,MAAX,CAAkB,UAAW,CAC3BJ,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,IAAN,CAAWC,cAAX,EAAZ,EACD,CAFD,EAGAX,OAAO,CAAC,IAAD,CAAP,CACAC,WAAW,CAAC,KAAD,CAAX,CACAF,OAAO,CAACQ,IAAR,CAAa,GAAb,EACD,CACF,CAbD,CAeA;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAEE,mBACE,qDACE,mDADF,cAQE,8BAAQ,OAAO,CAAEF,aAAjB,YARF,CADF,CAYD,CA/DD,CAkEA,cAAeP,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\nimport Kakao from 'kakaojs';\nimport {useSetRecoilState} from 'recoil';\nimport InitializeState from 'recoilStates/InitializeState';\nimport useRecoilState from 'recoilStates/IsLoggedInState';\n\n\n//updateProfile({displayName 추가 만들기})\n\n\nconst Profile =  () => {\n  // const [arr, setArr] = useState([]);\n  const history = useHistory();\n\n  const setInit = useSetRecoilState(InitializeState);\n  const setLoggedIn = useSetRecoilState(useRecoilState);\n\n  const user = firebase.auth().currentUser;\n  const onLogOutClick = () => {\n    if (user) {\n      firebase.auth().signOut();\n      history.push(\"/\");\n    } else {\n      console.log(Kakao.Auth.getAccessToken());\n      Kakao.Auth.logout(function() {\n        console.log(Kakao.Auth.getAccessToken());\n      });      \n      setInit(true);\n      setLoggedIn(false);\n      history.push(\"/\");\n    }\n  };\n\n  //currentUser updateProfile({displayName : input(state로)}) 이름 없을 때에는 null {userName ? <프로필> : <empty>}\n\n\n  \n  /*\n  import {useCallback, useEffect, useState}\n  const getRoadInfoCurrentUser = useCallback(async () => {\n    try {\n      const road = await firebase.firestore().collection('WalkRoad').where('user', '==', `${user.uid}`).get()\n\n      road.forEach(doc => {\n        const arrObj = {\n          ...doc.data(),\n          id: doc.id,\n        };\n        setArr((prev) => [arrObj, ...prev]);\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }, [user.uid]) ;\n\n  useEffect(() => {\n    if (user) {\n      getRoadInfoCurrentUser();\n    }\n  }, [getRoadInfoCurrentUser, user])*/\n\n  return (\n    <>\n      <h2>프로필</h2> \n      {/* {arr ? arr.map((data) => <div key={data.id} style={{\n          marginTop:\"20px\",\n          marginBottom:\"30px\"\n      }}>\n          <h4>{data.roadName}</h4>\n      </div> ):<h5>산책로 정보 불러오는 중..</h5>} */}\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}