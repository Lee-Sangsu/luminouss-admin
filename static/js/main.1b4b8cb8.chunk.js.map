{"version":3,"sources":["global/GlobalNavigation.js","components/pages/Home.js","components/pages/About.js","global/fbase.js","components/pages/Profile.js","recoilStates/SupportInfraListState.js","functions/SupportInfraItemCreator.js","components/molecules/SupportInfraItem.js","recoilStates/AddressState.js","components/molecules/InputAddress.js","recoilStates/RoadNameState.js","global/KakaoAuthKey.js","recoilStates/SearchedResultState.js","components/molecules/RoadNameInput.js","recoilStates/WarningState.js","components/molecules/WarningInput.js","recoilStates/FeatureState.js","components/molecules/FeaturesInput.js","components/molecules/SelectEnv.js","components/molecules/SelectPavement.js","recoilStates/InfraListState.js","components/molecules/InfraItem.js","functions/InfraItemCreator.js","recoilStates/AroundEnvListState.js","components/molecules/AroundEnvItem.js","functions/AroundItemCreator.js","recoilStates/AroundSubwayState.js","components/molecules/SearchResults.js","components/organisms/AddRoadForm.js","hooks/useConfirm.js","functions/SetEntireStates.js","components/pages/AddRoad.js","components/pages/SignUp.js","components/pages/SignIn.js","global/Router.js","global/App.js","index.js"],"names":["Navigation","isLoggedIn","className","to","Home","About","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Profile","history","useHistory","onClick","console","log","auth","currentUser","signOut","push","SupportInfraListState","atom","key","default","id","SupportInfraItemCreator","useState","latitude","setLatitude","longitude","setLongitude","state","setState","setInfraList","useSetRecoilState","onChange","target","name","value","options","event","placeholder","type","oldInfraList","text","supportInfra","SupportInfaItem","item","useRecoilState","infraList","index","findIndex","listItem","style","width","display","marginRight","newList","arr","newValue","slice","replaceItemAtIndex","removeItemAtIndex","AdressState","address_name","InputAddress","setAddress","useRecoilValue","AddressState","marginTop","marginBottom","RoadNameState","kakaoAuthKey","SearchedResultState","RoadNameInput","setSearchState","input","setInput","a","axios","get","headers","params","query","then","results","itemList","JSON","parse","stringify","data","documents","catch","error","height","position","textIndent","required","zIndex","marginLeft","padding","WarningState","WarningInput","setWarning","warning","wordBreak","FeatureState","FeaturesInput","setFeature","feature","SelectEnv","SelectPavement","exceptValue","setExceptValue","InfraListState","InfaItem","Infra","AroundEnvListState","AroundEnvItem","AroundItemCreator","address","setName","AroundSubwayState","SearchResults","setSubways","y","x","category_group_code","size","res","subwayList","document","getElementById","textAlign","backgroundColor","borderRadius","borderColor","place_name","AddRoadForm","supportInfraList","aroundList","searchResults","map","supportInfraItem","SupportInfraItem","InfraItemCreator","infraItem","InfraItem","aroundEnvItem","useConfirm","message","onConfirm","onCancel","confirmAction","window","confirm","SetEntireStates","roadName","aroundEnvList","AddRoad","confirmSubmit","firestore","collection","doc","set","alert","documentError","flexDirection","justifyContent","alignItems","borderWidth","fontSize","fontWeight","Register","email","setEmail","password","setPassword","setError","onSubmit","preventDefault","createUserWithEmailAndPassword","SignIn","signInWithEmailAndPassword","AppRouter","exact","path","App","init","setInit","setLoggedIn","useEffect","onAuthStateChanged","user","Date","getFullYear","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b4b8cb8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport 'components/styles/GlobalNavigation.css'\r\n\r\n\r\nconst Navigation = ({ isLoggedIn }) => (\r\n  <nav className=\"nav\">\r\n    <ul className=\"ul\">\r\n      <li className=\"luminouss\">\r\n        <Link to=\"/\" className=\"link\">\r\n          루미너스\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"about\">\r\n        <Link to=\"/about-luminouss\" className=\"link\">\r\n          About\r\n        </Link>\r\n      </li>\r\n\r\n      {isLoggedIn ? (\r\n        <li className=\"profile\">\r\n          <Link to=\"/my-profile\" className=\"link\">\r\n            My Profile\r\n          </Link>\r\n        </li>\r\n      ) : (\r\n        <li className=\"login\">\r\n          <Link to=\"sign-in\" className=\"link\">\r\n            로그인\r\n          </Link>\r\n        </li>\r\n      )}\r\n      \r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"components/styles/Home.css\"\r\n\r\nconst Home = ({ isLoggedIn }) => {\r\n    //login 안 된 경우, 로그인 필요합니다 알러트 띄우기\r\n    return (\r\n        <>\r\n            <div className=\"mainContainer\">\r\n                <h1 className=\"mainTitle\">\r\n                    시각장애인의 눈과 발이 되어주세요.\r\n                </h1>\r\n                <h3 className=\"explanation\">\r\n                    문제 설명...\r\n                </h3>\r\n\r\n                <div className=\"linkBox\">\r\n                    <div className=\"addWalkway_text\">산책로 정보 추가하기</div>\r\n                    <Link to=\"/add-road-info\" className=\"addWalkway\">\r\n                        +\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\n\n\nconst About = () => {\n\n  return (\n    <>\n        <span>기존 홈페이지의 내용이 들어갈 겁니다.</span>\n\n    </>\n  );\n}\n\nexport default About;","import * as firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDnnOxwXNnDwI5YkBn1hHPf5IPWOF_AsRM\",\n  authDomain: \"luminouss-web.firebaseapp.com\",\n  databaseURL: \"https://luminouss-web.firebaseio.com\",\n  projectId: \"luminouss-web\",\n  storageBucket: \"luminouss-web.appspot.com\",\n  messagingSenderId: \"96756233299\",\n  appId: \"1:96756233299:web:9656acaac90655a71d42a6\",\n  measurementId: \"G-X59RM3F71E\"\n};\n\n\nexport default firebase.default.initializeApp(firebaseConfig);\n","import React  from 'react';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\n//updateProfile({displayName 추가 만들기})\n\n\nconst Profile =  () => {\n    const history = useHistory();\n    const onLogOutClick = () => {\n        console.log(firebase.auth().currentUser);\n        firebase.auth().signOut();\n        history.push(\"/\");\n    };\n    //currentUser updateProfile({displayName : input(state로)}) \n    // 이름 없을 때에는 null {userName ? <프로필> : <empty>}없으면 \n    return (\n      <>\n        <h2>의 프로필</h2> \n        <button onClick={onLogOutClick}>Log Out</button>\n      </>\n    );\n  };\n\n\n  export default Profile;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst SupportInfraListState = atom({\n    key: 'supportInfraListState',\n    default: [],\n});\n\nexport default SupportInfraListState;","import {\n    useSetRecoilState,\n  } from 'recoil';\nimport React, {useState} from 'react';\nimport SupportInfraListState from 'recoilStates/SupportInfraListState';\nimport Dropdown from 'react-dropdown';\nimport 'components/styles/Dropdown.css';\nimport 'components/styles/AddingList.css'\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\nconst SupportInfraItemCreator = () => {\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"음성유도기\", \"유도블럭\", \"점자 표지판\", \"안전펜스\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const setInfraList = useSetRecoilState(SupportInfraListState);\n  \n    const addItem = () => {\n      setInfraList((oldInfraList) => [\n        ...oldInfraList,\n        {\n          id: getId(),\n          text: `${latitude}, ${longitude}`,\n          supportInfra: state,\n        },\n      ]);\n      setLatitude('');\n      setLongitude('');\n    };\n  \n    const onChange = ({target: {name, value}}) => {\n      if (name === \"lat\"){ \n        setLatitude(value);\n      } else if (name === \"lng\") {\n        setLongitude(value);\n      }\n    };\n  \n    return (\n      <div>\n        <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"보조시설 종류\" />\n        \n        <input name=\"lat\" type=\"text\" value={latitude} placeholder=\"위도\" onChange={onChange} />\n        <input name=\"lng\" type=\"text\" value={longitude} placeholder=\"경도\" onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n}\n\n\nexport default SupportInfraItemCreator;","import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport SupportInfraListState from 'recoilStates/SupportInfraListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst SupportInfaItem = ({item}) => {\n    const [infraList, setInfraList] = useRecoilState(SupportInfraListState);\n    const index = infraList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(infraList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setInfraList(newList);\n    };\n  \n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(infraList, index);\n  \n      setInfraList(newList);\n    };\n  \n  return (\n    <div style={{width:'700px'}}>\n      <h4 style={{display:'inline-block', marginRight:'10px'}}>{item.supportInfra}</h4>\n      <input style={{display:'inline-block'}} type=\"text\" value={item.text} onChange={editItemText} />\n      <button style={{display:'inline-block'}} onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default SupportInfaItem;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst AdressState = atom({\n    key: 'adressState',\n    default: '',\n    address_name: '',\n    latitude: '',\n    longitude: ''\n});\n\nexport default AdressState;","import React from \"react\";\nimport {useRecoilValue} from 'recoil';\nimport AddressState from 'recoilStates/AddressState';\n\nconst InputAddress = () => {\n\n    const setAddress = useRecoilValue(AddressState);\n    //isEmpty check 해서 state ''면 에러 배텅\n    return (\n        <div style={{\n            marginTop:'30px',\n            marginBottom:'30px'\n        }}>\n            <h3 id=\"road-head\" style={{\n            display: \"none\"\n          }}>산책로 위치: </h3>\n            <h5>{setAddress.address_name}</h5>\n        </div>\n    )\n};\n\nexport default InputAddress;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst RoadNameState = atom({\n    key: 'roadNameState',\n    default: '',\n});\n\nexport default RoadNameState;","const kakaoAuthKey = '5650b54a62f0d2d51724e17896cd8a55';\n\nexport default kakaoAuthKey;\n\n","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst SearchedResultState = atom({\n    key: 'searchedResultState',\n    default: []\n    // items: []\n});\n\nexport default SearchedResultState;","import React from \"react\";\nimport {useSetRecoilState, useRecoilState} from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\nimport axios from 'axios';\nimport kakaoAuthKey from 'global/KakaoAuthKey';\nimport SearchedResultState from 'recoilStates/SearchedResultState'\n\n\nconst RoadNameInput = ( {placeholder} ) => {\n    const setSearchState = useSetRecoilState(SearchedResultState);\n    const [input, setInput] = useRecoilState(RoadNameState);\n\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"just\") {\n        setInput(value);\n        // SearchKeyword(value);\n      }\n  }; \n\n  const onClick = async ()  => {\n    axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n      headers: {\n          'Authorization': `KakaoAK ${kakaoAuthKey}`,\n          'content-type': 'application/x-www-form-urlencoded'\n      },\n      params: { query: `${input}`}\n    }).then( (results) => {\n\n      const itemList = JSON.parse(JSON.stringify(results.data));\n      setSearchState(itemList.documents);\n    }).catch(error => console.log(error))\n  };\n\n  return (\n    <div style={{\n      display:\"flex\",\n      width:\"340px\",\n      height:\"35px\"\n    }}>\n      <input name=\"just\" onChange={onChange} value={input} placeholder={placeholder} style={{\n        display:\"flex\",\n        width:'340px',\n        height:\"35px\",\n        position:\"absolute\",\n        textIndent:'10px'\n      }} required/>\n      <button style={{\n        display:'block',\n        zIndex:\"1\",\n        position:\"absolute\",\n        width:\"80px\",\n        marginLeft:\"270px\",\n        height:\"41px\",\n        padding:'0'\n      }} onClick={onClick}> Search </button>\n    </div>\n  );\n};\n\nexport default RoadNameInput;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst WarningState = atom({\n    key: 'warningState',\n    default: '',\n});\n\nexport default WarningState;  ","import React from \"react\";\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport WarningState from 'recoilStates/WarningState';\n\nconst WarningInput = ( {placeholder} ) => {\n  const setWarning = useSetRecoilState(WarningState);\n  const warning = useRecoilValue(WarningState);\n\n  const onChange = (event) => {\n    const {\n        target: {\n            name, value\n        }\n    } = event;\n    if (name === \"just\") {\n      setWarning(value);\n    }\n}; \nreturn (\n  <>\n    <input name=\"just\" onChange={onChange} value={warning} placeholder={placeholder} style={{\n      width:'350px',\n      height:'100px',\n      textIndent: '20px',\n      wordBreak:'break-all'\n    }} required/>\n  </>\n);\n};\n\nexport default WarningInput;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst FeatureState = atom({\n    key: 'featureState',\n    default: '',\n});\n\nexport default FeatureState;","import React from \"react\";\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport FeatureState from 'recoilStates/FeatureState';\n\nconst FeaturesInput = ( {placeholder} ) => {\n    const setFeature = useSetRecoilState(FeatureState);\n    const feature = useRecoilValue(FeatureState);\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"just\") {\n        setFeature(value);\n      }\n  }; \n  return (\n    <>\n      <input name=\"just\" onChange={onChange} value={feature} placeholder={placeholder} style={{\n        width:'350px',\n        height:'60px',\n        textIndent: '20px',\n        wordBreak:'break-all'\n      }} required/>\n    </>\n  );\n};\n\nexport default FeaturesInput;","import React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst SelectEnv = () => {\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"천변\",\n        \"공원\",\n        \"강변\",\n        \"산\",\n        \"호수\",\n        \"길거리\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n\n    return (\n        <>\n            <h3>산책로 환경</h3>\n            <div style={{\n                width:'200px'\n            }}>\n                <Dropdown className='road-env' options={options} onChange={onSelect} value={state} placeholder='환경' />\n            </div>\n        </>\n    )\n};\n\nexport default SelectEnv;","import React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst SelectPavement = () => {\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const [exceptValue, setExceptValue] = useState('');\n    const options = [\n        \"시멘트\",\n        \"흙, 돌\",\n        \"나무 데크\",\n        \"탄성 포장재(놀이터 바닥 포장재)\",\n        \"기타\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const onChange = ({target: {name, value}}) => {\n        if (name === \"except value\"){ \n            setExceptValue(value);\n        } \n    };\n\n    return (\n        <>\n            <h3> 포장재질 </h3>\n            <div style={{\n                width:'300px'\n            }}>\n                <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"길 포장 재질\" />\n                {state === options[4] ? <input onChange={onChange} name=\"except value\" value={exceptValue} placeholder='포장 재질을 직접 입력해주세요' /> : <></>}\n            </div>      \n        </>\n    )\n};\n\nexport default SelectPavement;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst InfraListState = atom({\n    key: 'infraListState',\n    default: [],\n});\n\nexport default InfraListState;","import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport InfraListState from 'recoilStates/InfraListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst InfaItem = ({item}) => {\n    const [infraList, setInfraList] = useRecoilState(InfraListState);\n    const index = infraList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(infraList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setInfraList(newList);\n    };\n  \n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(infraList, index);\n  \n      setInfraList(newList);\n    };\n  \n  return (\n    <div style={{width:'700px'}}>\n      <h4 style={{display:'inline-block', marginRight:'10px'}}>{item.supportInfra}</h4>\n      <input style={{display:'inline-block'}} type=\"text\" value={item.text} onChange={editItemText} />\n      <button style={{display:'inline-block'}} onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default InfaItem;","import {\n    useSetRecoilState,\n  } from 'recoil';\nimport React, {useState} from 'react';\nimport InfraListState from 'recoilStates/InfraListState';\nimport Dropdown from 'react-dropdown';\nimport 'components/styles/Dropdown.css';\n\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\nconst SupportInfraItemCreator = () => {\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"화장실\", \"계단\", \"벤치 및 쉬는 공간\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const setInfraList = useSetRecoilState(InfraListState);\n  \n    const addItem = () => {\n      setInfraList((oldInfraList) => [\n        ...oldInfraList,\n        {\n          id: getId(),\n          text: `${latitude}, ${longitude}`,\n          Infra: state,\n        },\n      ]);\n      setLatitude('');\n      setLongitude('');\n    };\n  \n    const onChange = ({target: {name, value}}) => {\n      if (name === \"lat\"){ \n        setLatitude(value);\n      } else if (name === \"lng\") {\n        setLongitude(value);\n      }\n    };\n  \n    return (\n      <div>\n        <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n        <input name=\"lat\" type=\"text\" value={latitude} placeholder=\"위도\" onChange={onChange} />\n        <input name=\"lng\" type=\"text\" value={longitude} placeholder=\"경도\" onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n}\n\n\nexport default SupportInfraItemCreator;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst AroundEnvListState = atom({\n    key: 'aroundEnvListState',\n    default: [],\n});\n\nexport default AroundEnvListState;","import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport AroundEnvListState  from 'recoilStates/AroundEnvListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst AroundEnvItem = ({item}) => {\n    const [infraList, setInfraList] = useRecoilState(AroundEnvListState);\n    const index = infraList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(infraList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setInfraList(newList);\n    };\n  \n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(infraList, index);\n  \n      setInfraList(newList);\n    };\n  \n  return (\n    <div style={{width:'700px'}}>\n      <h4 style={{display:'inline-block', marginRight:'10px'}}>{item.supportInfra}</h4>\n      <input style={{display:'inline-block'}} type=\"text\" value={item.text} onChange={editItemText} />\n      <button style={{display:'inline-block'}} onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default AroundEnvItem;","import {\n    useSetRecoilState,\n  } from 'recoil';\nimport React, {useState} from 'react';\nimport AroundEnvListState from 'recoilStates/AroundEnvListState';\nimport Dropdown from 'react-dropdown';\nimport 'components/styles/Dropdown.css';\n\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\nconst AroundItemCreator = () => {\n    const [address, setAddress] = useState('');\n    const [name, setName] = useState('');\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"음식점\", \"카페\", \"랜드마크\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const setInfraList = useSetRecoilState(AroundEnvListState);\n  \n    const addItem = () => {\n      setInfraList((oldInfraList) => [\n        ...oldInfraList,\n        {\n          id: getId(),\n          text: `${address}, ${name}`,\n          supportInfra: state,\n        },\n      ]);\n      setAddress('');\n      setName('');\n    };\n  \n    const onChange = ({target: {name, value}}) => {\n      if (name === \"address\"){ \n        setAddress(value);\n      } else if (name === \"name\") {\n        setName(value);\n      }\n    };\n  \n    return (\n      <div>\n        <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n        <input name=\"address\" type=\"text\" value={address} placeholder=\"이름\" onChange={onChange} />\n        <input name=\"name\" type=\"text\" value={name} placeholder=\"주소\" onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n}\n\n\nexport default AroundItemCreator;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst AroundSubwayState = atom({\n    key: 'aroundSubwayState',\n    default: [],\n});\n\nexport default AroundSubwayState;","import React from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport AddressState from 'recoilStates/AddressState';\nimport axios from 'axios';\nimport kakaoAuthKey from 'global/KakaoAuthKey';\nimport AroundSubwayState from 'recoilStates/AroundSubwayState';\nimport 'components/styles/SearchResultList.css'\n\nconst SearchResults = ( {data} ) => {\n    const [address, setAddress] = useRecoilState(AddressState);\n    const setSubways = useSetRecoilState(AroundSubwayState);\n\n    const onClick = async () => {\n        setAddress({\n            address_name: data.address_name,\n            latitude: data.y,\n            longitude: data.x\n        });\n\n        axios.get('https://dapi.kakao.com/v2/local/search/category.json', {\n            headers : {\n                'Authorization': `KakaoAK ${kakaoAuthKey}`,\n                'content-type': 'application/x-www-form-urlencoded'\n            },\n            params : {\n                category_group_code: 'SW8',\n                x: address.longitude,\n                y: address.latitude,\n                size: 2\n            } \n        }).then((res) => {\n            const subwayList = JSON.parse(JSON.stringify(res.data));\n            setSubways(subwayList.documents);\n        }).catch(error => console.log(error))\n\n\n        document.getElementById(\"search-results\").style.display = 'none';\n        document.getElementById(\"road-head\").style.display = 'block';\n    };\n\n    return (\n        <button onClick={onClick} style={{\n            width:\"350px\",\n            textAlign:\"start\",\n            textIndent:\"15px\",\n            backgroundColor:'white',\n            // borderBottomWidth:'0px',\n            marginTop:'-2px',\n            borderRadius:'3px',\n            borderColor:'black'\n        }}>\n            <h3>{data.place_name}</h3>\n            <h5>{data.address_name}</h5>\n        </button>\n    )\n};\n\nexport default SearchResults;","import React from \"react\";\nimport {\n    useRecoilValue,\n  } from 'recoil';\nimport SupportInfraItemCreator from 'functions/SupportInfraItemCreator';\nimport SupportInfraItem from 'components/molecules/SupportInfraItem';\nimport SupportInfraListState from 'recoilStates/SupportInfraListState';\nimport InputAddress from 'components/molecules/InputAddress';\nimport RoadNameInput from 'components/molecules/RoadNameInput';\nimport WarningInput from 'components/molecules/WarningInput';\nimport FeaturesInput from 'components/molecules/FeaturesInput';\n\nimport SelectEnv from 'components/molecules/SelectEnv';\nimport SelectPavement from 'components/molecules/SelectPavement';\nimport InfraListState from 'recoilStates/InfraListState';\nimport InfraItem from 'components/molecules/InfraItem';\nimport InfraItemCreator from 'functions/InfraItemCreator';\n\nimport AroundEnvListState from 'recoilStates/AroundEnvListState';\nimport AroundEnvItem from 'components/molecules/AroundEnvItem';\nimport AroundItemCreator from 'functions/AroundItemCreator'\nimport SearchedResultState from 'recoilStates/SearchedResultState';\nimport SearchResults from 'components/molecules/SearchResults';\n\nconst AddRoadForm = () => {\n    const supportInfraList = useRecoilValue(SupportInfraListState);\n    const infraList = useRecoilValue(InfraListState);\n    const aroundList = useRecoilValue(AroundEnvListState);\n    //정보등록 onclick으로 firebase.firestore 한번에 넣기\n    const searchResults = useRecoilValue(SearchedResultState);\n    \n   \n    return (\n      <>\n        <div className=\"input-form\" style={{\n          width:\"400px\",\n          height:\"fit-content\"\n        }}>\n          <h3>새로운 산책로을 검색하고 위치를 추가해주세요</h3>\n          <RoadNameInput placeholder=\"산책로 이름\" />\n          <InputAddress />\n          <div id=\"search-results\">\n          {searchResults.map((data) => (\n            <SearchResults key={data.id} data={data} />\n          ))}\n          </div>\n          <SelectEnv />\n          <SelectPavement />\n\n          <h4>보조시설 추가</h4>\n          <SupportInfraItemCreator />\n          {supportInfraList.map((supportInfraItem) => (\n            <SupportInfraItem key={supportInfraItem.id} item={supportInfraItem} />\n          ))}\n\n\n          <h4>시설 추가</h4>\n          <InfraItemCreator />\n          {infraList.map((infraItem) => (\n            <InfraItem key={infraItem.id} item={infraItem} />\n          ))}\n\n          <h4>주변환경 추가</h4>\n          <AroundItemCreator />\n          {aroundList.map((aroundEnvItem) => (\n            <AroundEnvItem key={aroundEnvItem.id} item={aroundEnvItem} />\n          ))}\n\n          <h4>걸을 때 주의사항</h4>\n          <WarningInput placeholder=\"걸을 때 주의사항을 적어주세요\" />\n          \n          <h4>산책로 특징</h4>\n          <FeaturesInput placeholder=\"산책로의 특징을 적어주세요\" />\n        </div>\n      </>\n    );\n};\n\nexport default AddRoadForm;","const useConfirm = (message= \"\", onConfirm, onCancel) => {\n\tif (onCancel && typeof onCancel !== \"function\"){\n\t\treturn;\n\t}\n\tif(onConfirm && typeof onConfirm !== \"function\"){\n\t\treturn;\n\t}\n\tconst confirmAction = () => {\n\t\tif (window.confirm(message)){\n\t\t\tonConfirm();\n\t\t} else {\n\t\t\tonCancel();\n\t\t}\n\t}\n\treturn confirmAction;\n};\n\nexport default useConfirm;","// eslint-disable-next-line\nimport React from \"react\";\nimport { useRecoilValue } from 'recoil';\nimport WarningState from '../recoilStates/WarningState';\nimport RoadNameState from '../recoilStates/RoadNameState';\nimport FeatureState from '../recoilStates/FeatureState';\nimport InfraListState from '../recoilStates/InfraListState';\nimport SupportInfraListState from '../recoilStates/SupportInfraListState';\nimport AroundEnvListState from '../recoilStates/AroundEnvListState';\nimport AddressState from '../recoilStates/AddressState';\n\n\n\nconst SetEntireStates = () => {\n    const warning = useRecoilValue(WarningState);\n    const roadName = useRecoilValue(RoadNameState);\n    const feature = useRecoilValue(FeatureState);\n    const infraList = useRecoilValue(InfraListState);\n    const supportInfraList = useRecoilValue(SupportInfraListState);\n    const aroundEnvList = useRecoilValue(AroundEnvListState);\n    const address = useRecoilValue(AddressState);\n\n\n    \n\n\n    const EntireState = {\n        roadName: roadName,\n        warning: warning,\n        feature: feature,\n        infraList: infraList,\n        supportInfraList: supportInfraList,\n        aroundEnvList: aroundEnvList,\n        address: address\n    };\n    return EntireState;\n};\n\nexport default SetEntireStates;","import React from \"react\";\nimport AddRoadForm from 'components/organisms/AddRoadForm';\nimport useConfirm from 'hooks/useConfirm';\n// import { useRecoilValue } from 'recoil';\nimport SetEntireStates from 'functions/SetEntireStates';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\n\nconst AddRoad = () => {\n  const history = useHistory();\n  const a = SetEntireStates();\n    const submitConfirm = async () => {\n      // recoil value 다 가져와서 firestore에 한번에 저장\n      await firebase.firestore().collection(\"WalkRoad\").doc(a.roadName).set(a)\n      .then(() => {\n          window.alert(\"Document successfully written!\");;               \n          history.push('/');\n      })\n      .catch(function(documentError) {\n        window.alert(documentError);\n      });\n    };\n    const abort = () => console.log('abort'); \n    const confirmSubmit = useConfirm(\"You sure?\", submitConfirm, abort);\n\t\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        height: '100%',\n        justifyContent:'center',\n        alignItems: 'center'\n      }}>\n        <h2>AddRoad Page</h2>\n        <AddRoadForm />\n        <button onClick={confirmSubmit} style={{\n          width:'200px',\n          height:'40px',\n          borderWidth:'3px',\n          marginTop:'15px',\n          fontSize: '15px',\n          fontWeight: '500'\n        }}> 정보 등록하기 </button>\n      </div>\n    );\n};\n\nexport default AddRoad;","import React, { useState } from \"react\";\nimport firebase from \"global/fbase\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Register = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => { \n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            // let data;\n            await firebase.auth().createUserWithEmailAndPassword(email, password);\n            //어케 홈 화면으로 다시 돌려보내지\n            history.push(\"/\");\n        } catch (error) {\n            setError(error.message);\n            console.log(error.message);\n        }\n    };\n\n\n    return (\n    <>\n        <span>회원가입 PAGE</span>\n        <h2>계정을 만들고 산책로를 추가해보세요</h2>\n        <form onSubmit={onSubmit}>\n            <h4>이메일</h4>\n            <input name=\"email\" type=\"email\" value={email} onChange={onChange} required></input>\n            <h4>비밀번호</h4>\n            <input name=\"password\" type=\"password\" value={password} onChange={onChange} required></input>\n            <input type=\"submit\" value=\"회원가입\"></input>\n            {error}\n        </form>\n        <h3>이미 계정이 있으신가요?</h3> <Link to=\"/sign-up\">로그인하기</Link>\n    </>\n    );\n};\n\nexport default Register;","import React, { useState } from \"react\";\nimport firebase from \"global/fbase\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst SignIn = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => { \n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            // let data;\n            await firebase.auth().signInWithEmailAndPassword(email, password);\n            //어케 홈 화면으로 다시 돌려보내지\n            history.push(\"/\");\n        } catch (error) {\n            setError(error.message);\n            console.log(error.message);\n        }\n    };\n\n\n    return (\n    <>\n        <span>로그인 PAGE</span>\n        <h2>계정을 만들고 산책로를 추가해보세요</h2>\n        <form onSubmit={onSubmit}>\n            <h4>이메일</h4>\n            <input name=\"email\" type=\"email\" value={email} onChange={onChange} required></input>\n            <h4>비밀번호</h4>\n            <input name=\"password\" type=\"password\" value={password} onChange={onChange} required></input>\n            <input type=\"submit\" value=\"로그인\"></input>\n            {error}\n        </form>\n        <h3>아직 계정이 없으신가요?</h3> <Link to=\"/sign-up\">회원가입하기</Link>\n    </>\n    );\n};\n\nexport default SignIn;","import React from 'react';\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from './GlobalNavigation';\nimport Home from 'components/pages/Home';\nimport About from 'components/pages/About';\nimport Profile from 'components/pages/Profile';\nimport AddRoad from \"components/pages/AddRoad\";\nimport Register from \"components/pages/SignUp\";\nimport SignIn from \"components/pages/SignIn\";\nimport {\n  RecoilRoot\n} from 'recoil';\n\nconst AppRouter = ({ isLoggedIn }) => {\n    return (<RecoilRoot>\n          <Router>\n            <Navigation isLoggedIn={isLoggedIn}/>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home isLoggedIn={isLoggedIn}/>\n              </Route>\n              <Route path=\"/about-luminouss\">\n                <About />\n              </Route>\n              <Route path=\"/my-profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/sign-in\">\n                <SignIn />\n              </Route>\n              <Route path=\"/sign-up\">\n                <Register />\n              </Route>\n              <Route path=\"/add-road-info\">\n                <AddRoad />\n              </Route>\n            </Switch>\n          </Router>\n        </RecoilRoot>\n      )\n  };\n  export default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport firebase from './fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect((() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }), []);\n\n  return (<>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Luminouss</footer>\n    </>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './global/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}