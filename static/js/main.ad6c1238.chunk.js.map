{"version":3,"sources":["global/GlobalNavigation.js","components/pages/Home.js","components/pages/About.js","global/fbase.js","components/pages/Profile.js","recoilStates/SupportInfraListState.js","functions/SupportInfraItemCreator.js","components/molecules/SupportInfraItem.js","recoilStates/AddressState.js","components/molecules/InputAddress.js","recoilStates/RoadNameState.js","components/molecules/RoadNameInput.js","global/authKey.js","recoilStates/WarningState.js","components/molecules/WarningInput.js","recoilStates/FeatureState.js","components/molecules/FeaturesInput.js","components/molecules/SelectEnv.js","components/molecules/SelectPavement.js","recoilStates/InfraListState.js","components/molecules/InfraItem.js","functions/InfraItemCreator.js","recoilStates/AroundEnvListState.js","components/molecules/AroundEnvItem.js","functions/AroundItemCreator.js","components/organisms/AddRoadForm.js","hooks/useConfirm.js","functions/SetEntireStates.js","components/pages/AddRoad.js","components/pages/SignUp.js","components/pages/SignIn.js","global/Router.js","global/App.js","index.js"],"names":["Navigation","isLoggedIn","to","Home","Box","bg","w","h","maxW","borderWidth","rounded","p","className","About","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Profile","history","useHistory","onClick","console","log","auth","currentUser","signOut","push","SupportInfraListState","atom","key","default","id","SupportInfraItemCreator","useState","latitude","setLatitude","longitude","setLongitude","state","setState","setInfraList","useSetRecoilState","onChange","target","name","value","options","event","placeholder","type","oldInfraList","text","supportInfra","SupportInfaItem","item","useRecoilState","infraList","index","findIndex","listItem","newList","arr","newValue","slice","replaceItemAtIndex","removeItemAtIndex","AdressState","addressOption","detailedAddress","InputAddress","address","selectAddress","detailAddress","setDetailAddress","setAddress","AddressState","sort","required","RoadNameState","RoadNameInput","setRoadName","roadName","useRecoilValue","SearchKeyword","keyword","a","axios","get","headers","params","query","then","res","catch","error","WarningState","WarningInput","setWarning","warning","FeatureState","FeaturesInput","setFeature","feature","SelectEnv","SelectPavement","exceptValue","setExceptValue","InfraListState","InfaItem","Infra","AroundEnvListState","AroundEnvItem","AroundItemCreator","setName","AddRoadForm","supportInfraList","aroundList","map","supportInfraItem","SupportInfraItem","InfraItemCreator","infraItem","InfraItem","aroundEnvItem","useConfirm","message","onConfirm","onCancel","confirmAction","window","confirm","SetEntireStates","aroundEnvList","AddRoad","confirmSubmit","firestore","collection","doc","set","alert","documentError","Register","email","setEmail","password","setPassword","setError","onSubmit","preventDefault","createUserWithEmailAndPassword","SignIn","signInWithEmailAndPassword","AppRouter","exact","path","App","init","setInit","setLoggedIn","useEffect","onAuthStateChanged","user","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad6c1238.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ isLoggedIn }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">루미너스</Link>\n      </li>\n      <li>\n        <Link to=\"/about-luminouss\">About</Link>\n      </li>\n      {isLoggedIn ? (\n        <li>\n          <Link to=\"/my-profile\">My Profile</Link>\n        </li>\n      ) : (\n        <li>\n          <Link to=\"sign-in\">로그인</Link>\n        </li>\n      )}\n      \n    </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nconst Home = ({ isLoggedIn }) => {\n    return (\n        <>\n            <h1>시각장애인의 눈과 발이 되어주세요.</h1>\n            <h3>문제 설명 .....</h3>\n\n                <Box bg=\"black\" w=\"100px\" h=\"100px\" maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" p={4} className=\"add-road-info\" >\n                    <Link to=\"/add-road-info\" >산책로 추가하기</Link>\n                </Box>\n        </>\n    );\n};\n\nexport default Home;","import React from \"react\";\n\n\nconst About = () => {\n\n  return (\n    <>\n        <span>기존 홈페이지의 내용이 들어갈 겁니다.</span>\n\n    </>\n  );\n}\n\nexport default About;","import * as firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDnnOxwXNnDwI5YkBn1hHPf5IPWOF_AsRM\",\n  authDomain: \"luminouss-web.firebaseapp.com\",\n  databaseURL: \"https://luminouss-web.firebaseio.com\",\n  projectId: \"luminouss-web\",\n  storageBucket: \"luminouss-web.appspot.com\",\n  messagingSenderId: \"96756233299\",\n  appId: \"1:96756233299:web:9656acaac90655a71d42a6\",\n  measurementId: \"G-X59RM3F71E\"\n};\n\n\nexport default firebase.default.initializeApp(firebaseConfig);\n","import React  from 'react';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\n//updateProfile({displayName 추가 만들기})\n\n\nconst Profile =  () => {\n    const history = useHistory();\n    const onLogOutClick = () => {\n        console.log(firebase.auth().currentUser);\n        firebase.auth().signOut();\n        history.push(\"/\");\n    };\n    //currentUser updateProfile({displayName : input(state로)}) \n    // 이름 없을 때에는 null {userName ? <프로필> : <empty>}없으면 \n    return (\n      <>\n        <h2>의 프로필</h2> \n        <button onClick={onLogOutClick}>Log Out</button>\n      </>\n    );\n  };\n\n\n  export default Profile;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst SupportInfraListState = atom({\n    key: 'supportInfraListState',\n    default: [],\n});\n\nexport default SupportInfraListState;","import {\n    useSetRecoilState,\n  } from 'recoil';\nimport React, {useState} from 'react';\nimport SupportInfraListState from 'recoilStates/SupportInfraListState';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\nconst SupportInfraItemCreator = () => {\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"음성유도기\", \"유도블럭\", \"점자 표지판\", \"안전펜스\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const setInfraList = useSetRecoilState(SupportInfraListState);\n  \n    const addItem = () => {\n      setInfraList((oldInfraList) => [\n        ...oldInfraList,\n        {\n          id: getId(),\n          text: `${latitude}, ${longitude}`,\n          supportInfra: state,\n        },\n      ]);\n      setLatitude('');\n      setLongitude('');\n    };\n  \n    const onChange = ({target: {name, value}}) => {\n      if (name === \"lat\"){ \n        setLatitude(value);\n      } else if (name === \"lng\") {\n        setLongitude(value);\n      }\n    };\n  \n    return (\n      <div>\n        <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n        <input name=\"lat\" type=\"text\" value={latitude} placeholder=\"위도\" onChange={onChange} />\n        <input name=\"lng\" type=\"text\" value={longitude} placeholder=\"경도\" onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n}\n\n\nexport default SupportInfraItemCreator;","import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport SupportInfraListState from 'recoilStates/SupportInfraListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst SupportInfaItem = ({item}) => {\n    const [infraList, setInfraList] = useRecoilState(SupportInfraListState);\n    const index = infraList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(infraList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setInfraList(newList);\n    };\n  \n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(infraList, index);\n  \n      setInfraList(newList);\n    };\n  \n  return (\n    <div>\n      <h4>{item.supportInfra}</h4>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default SupportInfaItem;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst AdressState = atom({\n    key: 'adressState',\n    addressOption: '',\n    detailedAddress: ''\n});\n\nexport default AdressState;","import React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {useSetRecoilState} from 'recoil';\nimport AddressState from 'recoilStates/AddressState';\n\nconst InputAddress = () => {\n    const [address, selectAddress] = useState('');\n    const [detailAddress, setDetailAddress] = useState('');\n    const setAddress = useSetRecoilState(AddressState);\n\n    var options = [\n        \"종로구\", \"중구\", \"용산구\", \"성동구\", \"광진구\", \"동대문구\", \"중랑구\", \"성북구\", \"강북구\", \"도봉구\", \"노원구\", \"은평구\", \"서대문구\", \"마포구\", \"양천구\", \"강서구\", \"구로구\", \"금천구\", \"영등포구\", \"동작구\", \"관악구\", \"서초구\", \"강남구\", \"송파구\", \"강동구\"\n    ];\n    options.sort();\n    const onSelect = (event) => {\n        selectAddress(event.value);\n    };\n\n    const onChange = (event) => {\n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"세부 주소\") {\n            setDetailAddress(value);\n            setAddress({\n                addressOption: address,\n                detailedAddress: value,\n            });   \n        }\n    };\n    \n    return (\n        <>\n            <Dropdown options={options} onChange={onSelect} value={address} placeholder=\"Select an option\" />\n            <input name=\"세부 주소\" value={detailAddress} onChange={onChange} placeholder=\"세부 주소를 작성해주세용\" required/>\n        </>\n    )\n};\n\nexport default InputAddress;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst RoadNameState = atom({\n    key: 'roadNameState',\n    default: '',\n});\n\nexport default RoadNameState;","import React from \"react\";\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport RoadNameState from 'recoilStates/RoadNameState';\n// import SearchKeyword from 'functions/SearchKeyword';\nimport axios from 'axios';\nimport kakaoAuthKey from 'global/authKey';\n\n\nconst RoadNameInput = ( {placeholder} ) => {\n    const setRoadName = useSetRecoilState(RoadNameState);\n    const roadName = useRecoilValue(RoadNameState);\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"just\") {\n        setRoadName(value);\n      }\n  }; \n\n  const SearchKeyword = async (keyword) => {\n    await axios.get('https://dapi.kakao.com/v2/local/search/keyword.json', {\n        headers: {\n            'Authorization': `KakaoAK ${kakaoAuthKey}`\n        },\n        params: { query: `${keyword}`}\n    }).then((res)=> {\n        console.log(res);\n    }).catch((error) => {\n        console.log(error);\n    });\n};\n\n  return (\n    <>\n      <input name=\"just\" onChange={onChange} value={roadName} placeholder={placeholder} required/>\n      <button onClick={SearchKeyword(roadName)}> 검색 </button>\n    </>\n  );\n};\n\nexport default RoadNameInput;","const kakaoAuthKey = '5650b54a62f0d2d51724e17896cd8a55';\n\nexport default kakaoAuthKey;\n\n","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst WarningState = atom({\n    key: 'warningState',\n    default: '',\n});\n\nexport default WarningState;  ","import React from \"react\";\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport WarningState from 'recoilStates/WarningState';\n\nconst WarningInput = ( {placeholder} ) => {\n  const setWarning = useSetRecoilState(WarningState);\n  const warning = useRecoilValue(WarningState);\n\n  const onChange = (event) => {\n    const {\n        target: {\n            name, value\n        }\n    } = event;\n    if (name === \"just\") {\n      setWarning(value);\n    }\n}; \nreturn (\n  <>\n    <input name=\"just\" onChange={onChange} value={warning} placeholder={placeholder} required/>\n  </>\n);\n};\n\nexport default WarningInput;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst FeatureState = atom({\n    key: 'featureState',\n    default: '',\n});\n\nexport default FeatureState;","import React from \"react\";\nimport {useSetRecoilState, useRecoilValue} from 'recoil';\nimport FeatureState from 'recoilStates/FeatureState';\n\nconst FeaturesInput = ( {placeholder} ) => {\n    const setFeature = useSetRecoilState(FeatureState);\n    const feature = useRecoilValue(FeatureState);\n\n    const onChange = (event) => {\n      const {\n          target: {\n              name, value\n          }\n      } = event;\n      if (name === \"just\") {\n        setFeature(value);\n      }\n  }; \n  return (\n    <>\n      <input name=\"just\" onChange={onChange} value={feature} placeholder={placeholder} required/>\n    </>\n  );\n};\n\nexport default FeaturesInput;","import React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst SelectEnv = () => {\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"천변\",\n        \"공원\",\n        \"강변\",\n        \"산\",\n        \"호수\",\n        \"길거리\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n\n    return (\n        <>\n            <h3>산책로 환경</h3>\n            <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n        </>\n    )\n};\n\nexport default SelectEnv;","import React, { useState } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst SelectPavement = () => {\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const [exceptValue, setExceptValue] = useState('');\n    const options = [\n        \"시멘트\",\n        \"흙, 돌\",\n        \"나무 데크\",\n        \"탄성 포장재(놀이터 바닥 포장재)\",\n        \"기타\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const onChange = ({target: {name, value}}) => {\n        if (name === \"except value\"){ \n            setExceptValue(value);\n        } \n    };\n\n    return (\n        <>\n            <h3> 포장재질 </h3>\n            <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n            {state === options[4] ? <input onChange={onChange} name=\"except value\" value={exceptValue} placeholder='포장 재질을 직접 입력해주세요' /> : <></>}\n        </>\n    )\n};\n\nexport default SelectPavement;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst InfraListState = atom({\n    key: 'infraListState',\n    default: [],\n});\n\nexport default InfraListState;","import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport InfraListState from 'recoilStates/InfraListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst InfaItem = ({item}) => {\n    const [infraList, setInfraList] = useRecoilState(InfraListState);\n    const index = infraList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(infraList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setInfraList(newList);\n    };\n  \n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(infraList, index);\n  \n      setInfraList(newList);\n    };\n  \n  return (\n    <div>\n      <h4>{item.supportInfra}</h4>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default InfaItem;","import {\n    useSetRecoilState,\n  } from 'recoil';\nimport React, {useState} from 'react';\nimport InfraListState from 'recoilStates/InfraListState';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\nconst SupportInfraItemCreator = () => {\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"화장실\", \"계단\", \"벤치 및 쉬는 공간\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const setInfraList = useSetRecoilState(InfraListState);\n  \n    const addItem = () => {\n      setInfraList((oldInfraList) => [\n        ...oldInfraList,\n        {\n          id: getId(),\n          text: `${latitude}, ${longitude}`,\n          Infra: state,\n        },\n      ]);\n      setLatitude('');\n      setLongitude('');\n    };\n  \n    const onChange = ({target: {name, value}}) => {\n      if (name === \"lat\"){ \n        setLatitude(value);\n      } else if (name === \"lng\") {\n        setLongitude(value);\n      }\n    };\n  \n    return (\n      <div>\n        <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n        <input name=\"lat\" type=\"text\" value={latitude} placeholder=\"위도\" onChange={onChange} />\n        <input name=\"lng\" type=\"text\" value={longitude} placeholder=\"경도\" onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n}\n\n\nexport default SupportInfraItemCreator;","// eslint-disable-next-line\nimport React from 'react';\nimport {atom} from 'recoil';\n\nconst AroundEnvListState = atom({\n    key: 'aroundEnvListState',\n    default: [],\n});\n\nexport default AroundEnvListState;","import {\n    useRecoilState,\n  } from 'recoil';\nimport React from 'react';\nimport AroundEnvListState  from 'recoilStates/AroundEnvListState';\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nconst AroundEnvItem = ({item}) => {\n    const [infraList, setInfraList] = useRecoilState(AroundEnvListState);\n    const index = infraList.findIndex((listItem) => listItem === item);\n  \n    const editItemText = ({target: {value}}) => {\n      const newList = replaceItemAtIndex(infraList, index, {\n        ...item,\n        text: value,\n      });\n  \n      setInfraList(newList);\n    };\n  \n  \n    const deleteItem = () => {\n      const newList = removeItemAtIndex(infraList, index);\n  \n      setInfraList(newList);\n    };\n  \n  return (\n    <div>\n      <h4>{item.supportInfra}</h4>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n};\n\n\nexport default AroundEnvItem;","import {\n    useSetRecoilState,\n  } from 'recoil';\nimport React, {useState} from 'react';\nimport AroundEnvListState from 'recoilStates/AroundEnvListState';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\n\nlet id = 0;\n  \nfunction getId() {\n   return id++;\n}\n\nconst AroundItemCreator = () => {\n    const [address, setAddress] = useState('');\n    const [name, setName] = useState('');\n    const [state, setState] = useState(''); // 이 친구도 리코일로 바꿔야 할까..?\n    const options = [\n        \"음식점\", \"카페\", \"랜드마크\"\n    ];\n    const onSelect = (event) => {\n        setState(event.value);\n    };\n    const setInfraList = useSetRecoilState(AroundEnvListState);\n  \n    const addItem = () => {\n      setInfraList((oldInfraList) => [\n        ...oldInfraList,\n        {\n          id: getId(),\n          text: `${address}, ${name}`,\n          supportInfra: state,\n        },\n      ]);\n      setAddress('');\n      setName('');\n    };\n  \n    const onChange = ({target: {name, value}}) => {\n      if (name === \"address\"){ \n        setAddress(value);\n      } else if (name === \"name\") {\n        setName(value);\n      }\n    };\n  \n    return (\n      <div>\n        <Dropdown options={options} onChange={onSelect} value={state} placeholder=\"Select an option\" />\n        <input name=\"address\" type=\"text\" value={address} placeholder=\"이름\" onChange={onChange} />\n        <input name=\"name\" type=\"text\" value={name} placeholder=\"주소\" onChange={onChange} />\n        <button onClick={addItem}>Add</button>\n      </div>\n    );\n}\n\n\nexport default AroundItemCreator;","import React from \"react\";\nimport {\n    useRecoilValue,\n  } from 'recoil';\nimport SupportInfraItemCreator from 'functions/SupportInfraItemCreator';\nimport SupportInfraItem from 'components/molecules/SupportInfraItem';\nimport SupportInfraListState from 'recoilStates/SupportInfraListState';\nimport InputAddress from 'components/molecules/InputAddress';\nimport RoadNameInput from 'components/molecules/RoadNameInput';\nimport WarningInput from 'components/molecules/WarningInput';\nimport FeaturesInput from 'components/molecules/FeaturesInput';\n\nimport SelectEnv from 'components/molecules/SelectEnv';\nimport SelectPavement from 'components/molecules/SelectPavement';\nimport InfraListState from 'recoilStates/InfraListState';\nimport InfraItem from 'components/molecules/InfraItem';\nimport InfraItemCreator from 'functions/InfraItemCreator';\n\nimport AroundEnvListState from 'recoilStates/AroundEnvListState';\nimport AroundEnvItem from 'components/molecules/AroundEnvItem';\nimport AroundItemCreator from 'functions/AroundItemCreator'\n\nconst AddRoadForm = () => {\n    const supportInfraList = useRecoilValue(SupportInfraListState);\n    const infraList = useRecoilValue(InfraListState);\n    const aroundList = useRecoilValue(AroundEnvListState);\n    //정보등록 onclick으로 firebase.firestore 한번에 넣기\n\n    return (\n      <>\n        <RoadNameInput placeholder=\"산책로 이름을 적어주세요\" />\n        <h3>산책로 위치</h3>\n        <InputAddress />\n        <SelectEnv />\n        <SelectPavement />\n\n        <h4>보조시설 추가</h4>\n        <SupportInfraItemCreator />\n        {supportInfraList.map((supportInfraItem) => (\n          <SupportInfraItem key={supportInfraItem.id} item={supportInfraItem} />\n        ))}\n\n\n        <h4>시설 추가</h4>\n        <InfraItemCreator />\n        {infraList.map((infraItem) => (\n          <InfraItem key={infraItem.id} item={infraItem} />\n        ))}\n\n        <h4>주변환경 추가</h4>\n        <AroundItemCreator />\n        {aroundList.map((aroundEnvItem) => (\n          <AroundEnvItem key={aroundEnvItem.id} item={aroundEnvItem} />\n        ))}\n\n        <h4>걸을 때 주의사항</h4>\n        <WarningInput placeholder=\"걸을 때 주의사항을 적어주세요\" />\n        \n        <h4>산책로 특징</h4>\n        <FeaturesInput placeholder=\"산책로의 특징을 적어주세요\" />\n      </>\n    );\n};\n\nexport default AddRoadForm;","const useConfirm = (message= \"\", onConfirm, onCancel) => {\n\tif (onCancel && typeof onCancel !== \"function\"){\n\t\treturn;\n\t}\n\tif(onConfirm && typeof onConfirm !== \"function\"){\n\t\treturn;\n\t}\n\tconst confirmAction = () => {\n\t\tif (window.confirm(message)){\n\t\t\tonConfirm();\n\t\t} else {\n\t\t\tonCancel();\n\t\t}\n\t}\n\treturn confirmAction;\n};\n\nexport default useConfirm;","// eslint-disable-next-line\nimport React from \"react\";\nimport { useRecoilValue } from 'recoil';\nimport WarningState from '../recoilStates/WarningState';\nimport RoadNameState from '../recoilStates/RoadNameState';\nimport FeatureState from '../recoilStates/FeatureState';\nimport InfraListState from '../recoilStates/InfraListState';\nimport SupportInfraListState from '../recoilStates/SupportInfraListState';\nimport AroundEnvListState from '../recoilStates/AroundEnvListState';\nimport AddressState from '../recoilStates/AddressState';\n\n\n\nconst SetEntireStates = () => {\n    const warning = useRecoilValue(WarningState);\n    const roadName = useRecoilValue(RoadNameState);\n    const feature = useRecoilValue(FeatureState);\n    const infraList = useRecoilValue(InfraListState);\n    const supportInfraList = useRecoilValue(SupportInfraListState);\n    const aroundEnvList = useRecoilValue(AroundEnvListState);\n    const address = useRecoilValue(AddressState);\n\n\n    \n\n\n    const EntireState = {\n        roadName: roadName,\n        warning: warning,\n        feature: feature,\n        infraList: infraList,\n        supportInfraList: supportInfraList,\n        aroundEnvList: aroundEnvList,\n        address: address\n    };\n    return EntireState;\n};\n\nexport default SetEntireStates;","import React from \"react\";\nimport AddRoadForm from 'components/organisms/AddRoadForm';\nimport useConfirm from 'hooks/useConfirm';\n// import { useRecoilValue } from 'recoil';\nimport SetEntireStates from 'functions/SetEntireStates';\nimport firebase from 'global/fbase';\nimport {useHistory} from 'react-router-dom';\n\nconst AddRoad = () => {\n  const history = useHistory();\n  const a = SetEntireStates();\n    const submitConfirm = async () => {\n      // recoil value 다 가져와서 firestore에 한번에 저장\n      await firebase.firestore().collection(\"WalkRoad\").doc(a.roadName).set(a)\n      .then(() => {\n          window.alert(\"Document successfully written!\");;               \n          history.push('/');\n      })\n      .catch(function(documentError) {\n        window.alert(documentError);\n      });\n    };\n    const abort = () => console.log('abort'); \n    const confirmSubmit = useConfirm(\"You sure?\", submitConfirm, abort);\n\t\n\n    return (\n      <>\n        <h3>AddRoad Page</h3>\n        <AddRoadForm />\n        <button onClick={confirmSubmit}> 정보 등록하기 </button>\n\n      </>\n    );\n};\n\nexport default AddRoad;","import React, { useState } from \"react\";\nimport firebase from \"global/fbase\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Register = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => { \n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            // let data;\n            await firebase.auth().createUserWithEmailAndPassword(email, password);\n            //어케 홈 화면으로 다시 돌려보내지\n            history.push(\"/\");\n        } catch (error) {\n            setError(error.message);\n            console.log(error.message);\n        }\n    };\n\n\n    return (\n    <>\n        <span>회원가입 PAGE</span>\n        <h2>계정을 만들고 산책로를 추가해보세요</h2>\n        <form onSubmit={onSubmit}>\n            <h4>이메일</h4>\n            <input name=\"email\" type=\"email\" value={email} onChange={onChange} required></input>\n            <h4>비밀번호</h4>\n            <input name=\"password\" type=\"password\" value={password} onChange={onChange} required></input>\n            <input type=\"submit\" value=\"회원가입\"></input>\n            {error}\n        </form>\n        <h3>이미 계정이 있으신가요?</h3> <Link to=\"/sign-up\">로그인하기</Link>\n    </>\n    );\n};\n\nexport default Register;","import React, { useState } from \"react\";\nimport firebase from \"global/fbase\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst SignIn = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => { \n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            // let data;\n            await firebase.auth().signInWithEmailAndPassword(email, password);\n            //어케 홈 화면으로 다시 돌려보내지\n            history.push(\"/\");\n        } catch (error) {\n            setError(error.message);\n            console.log(error.message);\n        }\n    };\n\n\n    return (\n    <>\n        <span>로그인 PAGE</span>\n        <h2>계정을 만들고 산책로를 추가해보세요</h2>\n        <form onSubmit={onSubmit}>\n            <h4>이메일</h4>\n            <input name=\"email\" type=\"email\" value={email} onChange={onChange} required></input>\n            <h4>비밀번호</h4>\n            <input name=\"password\" type=\"password\" value={password} onChange={onChange} required></input>\n            <input type=\"submit\" value=\"로그인\"></input>\n            {error}\n        </form>\n        <h3>아직 계정이 없으신가요?</h3> <Link to=\"/sign-up\">회원가입하기</Link>\n    </>\n    );\n};\n\nexport default SignIn;","import React from 'react';\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from './GlobalNavigation';\nimport Home from 'components/pages/Home';\nimport About from 'components/pages/About';\nimport Profile from 'components/pages/Profile';\nimport AddRoad from \"components/pages/AddRoad\";\nimport Register from \"components/pages/SignUp\";\nimport SignIn from \"components/pages/SignIn\";\nimport {\n  RecoilRoot\n} from 'recoil';\n\nconst AppRouter = ({ isLoggedIn }) => {\n    return (<RecoilRoot>\n          <Router>\n            <Navigation isLoggedIn={isLoggedIn}/>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home isLoggedIn={isLoggedIn}/>\n              </Route>\n              <Route path=\"/about-luminouss\">\n                <About />\n              </Route>\n              <Route path=\"/my-profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/sign-in\">\n                <SignIn />\n              </Route>\n              <Route path=\"/sign-up\">\n                <Register />\n              </Route>\n              <Route path=\"/add-road-info\">\n                <AddRoad />\n              </Route>\n            </Switch>\n          </Router>\n        </RecoilRoot>\n      )\n  };\n  export default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport firebase from './fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect((() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }), []);\n\n  return (<>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Luminouss</footer>\n    </>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './global/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}